[DEBUG] 2020-02-22 11:31:55.471 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-22 11:31:55.477 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-22 11:31:55.493 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-22 11:31:55.738 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-22 11:31:55.743 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-22 11:31:56.338 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-22 11:31:56.340 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-22 11:31:56.373 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-22 11:31:57.042 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-22 11:31:57.095 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-22 11:31:57.098 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-22 11:31:57.137 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-22 11:31:57.242 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@d0ec63
[DEBUG] 2020-02-22 11:31:57.243 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@d0ec63
[DEBUG] 2020-02-22 11:31:57.243 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d0ec63
[DEBUG] 2020-02-22 11:31:57.245 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5e76a2bb
[DEBUG] 2020-02-22 11:31:57.246 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7ff2b8d2
[DEBUG] 2020-02-22 11:31:57.248 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@456be73c
[DEBUG] 2020-02-22 11:31:57.256 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@19f040ba
[DEBUG] 2020-02-22 11:31:57.257 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@19f040ba
[DEBUG] 2020-02-22 11:31:57.257 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@19f040ba
[DEBUG] 2020-02-22 11:31:57.259 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6d6cb754
[DEBUG] 2020-02-22 11:31:57.260 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6d6cb754
[DEBUG] 2020-02-22 11:31:57.260 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d6cb754
[DEBUG] 2020-02-22 11:31:57.265 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@213deac2
[DEBUG] 2020-02-22 11:31:57.266 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@213deac2
[DEBUG] 2020-02-22 11:31:57.266 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@213deac2
[DEBUG] 2020-02-22 11:31:57.268 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5b5caf08
[DEBUG] 2020-02-22 11:31:57.269 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5b5caf08
[DEBUG] 2020-02-22 11:31:57.269 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b5caf08
[DEBUG] 2020-02-22 11:31:57.270 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3e6f3bae
[DEBUG] 2020-02-22 11:31:57.270 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3e6f3bae
[DEBUG] 2020-02-22 11:31:57.271 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e6f3bae
[DEBUG] 2020-02-22 11:31:57.272 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d400943
[DEBUG] 2020-02-22 11:31:57.272 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@d400943
[DEBUG] 2020-02-22 11:31:57.273 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d400943
[DEBUG] 2020-02-22 11:31:57.275 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@aed0151
[DEBUG] 2020-02-22 11:31:57.275 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@aed0151
[DEBUG] 2020-02-22 11:31:57.276 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@aed0151
[DEBUG] 2020-02-22 11:31:57.277 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3a60c416
[DEBUG] 2020-02-22 11:31:57.278 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3a60c416
[DEBUG] 2020-02-22 11:31:57.279 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d64b553
[DEBUG] 2020-02-22 11:31:57.279 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d64b553
[DEBUG] 2020-02-22 11:31:57.281 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3bc735b3
[DEBUG] 2020-02-22 11:31:57.281 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3bc735b3
[DEBUG] 2020-02-22 11:31:57.282 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@779de014
[DEBUG] 2020-02-22 11:31:57.283 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4642b71d
[DEBUG] 2020-02-22 11:31:57.284 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3eb631b8
[DEBUG] 2020-02-22 11:31:57.285 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3eb631b8
[DEBUG] 2020-02-22 11:31:57.287 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6ef7623
[DEBUG] 2020-02-22 11:31:57.287 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6ef7623
[DEBUG] 2020-02-22 11:31:57.300 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@29a23c3d
[DEBUG] 2020-02-22 11:31:57.300 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@29a23c3d
[DEBUG] 2020-02-22 11:31:57.303 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@17ca8b92
[DEBUG] 2020-02-22 11:31:57.303 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@17ca8b92
[DEBUG] 2020-02-22 11:31:57.305 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5bb3131b
[DEBUG] 2020-02-22 11:31:57.306 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5bb3131b
[DEBUG] 2020-02-22 11:31:57.308 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6a933be2
[DEBUG] 2020-02-22 11:31:57.309 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6a933be2
[DEBUG] 2020-02-22 11:31:57.312 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67207d8a
[DEBUG] 2020-02-22 11:31:57.313 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@67207d8a
[DEBUG] 2020-02-22 11:31:57.316 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@28cb9120
[DEBUG] 2020-02-22 11:31:57.316 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@28cb9120
[DEBUG] 2020-02-22 11:31:57.319 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69b2f8e5
[DEBUG] 2020-02-22 11:31:57.320 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69b2f8e5
[DEBUG] 2020-02-22 11:31:57.322 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3605c4d3
[DEBUG] 2020-02-22 11:31:57.322 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3605c4d3
[DEBUG] 2020-02-22 11:31:57.324 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7c8326a4
[DEBUG] 2020-02-22 11:31:57.325 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7c8326a4
[DEBUG] 2020-02-22 11:31:57.328 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@60baef24
[DEBUG] 2020-02-22 11:31:57.329 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60baef24
[DEBUG] 2020-02-22 11:31:57.329 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60baef24
[DEBUG] 2020-02-22 11:31:57.334 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45f24169
[DEBUG] 2020-02-22 11:31:57.336 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6f6962ba
[DEBUG] 2020-02-22 11:31:57.337 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f6962ba
[DEBUG] 2020-02-22 11:31:57.337 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f6962ba
[DEBUG] 2020-02-22 11:31:57.339 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@599f571f
[DEBUG] 2020-02-22 11:31:57.341 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@65327f5
[DEBUG] 2020-02-22 11:31:57.341 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@65327f5
[DEBUG] 2020-02-22 11:31:57.344 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@349d0836
[DEBUG] 2020-02-22 11:31:57.345 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@349d0836
[DEBUG] 2020-02-22 11:31:57.346 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4917d36b
[DEBUG] 2020-02-22 11:31:57.347 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4917d36b
[DEBUG] 2020-02-22 11:31:57.349 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4905c46b
[DEBUG] 2020-02-22 11:31:57.349 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4905c46b
[DEBUG] 2020-02-22 11:31:57.351 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@693e4d19
[DEBUG] 2020-02-22 11:31:57.352 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@693e4d19
[DEBUG] 2020-02-22 11:31:57.353 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1c12f3ee
[DEBUG] 2020-02-22 11:31:57.355 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@511d5d04
[DEBUG] 2020-02-22 11:31:57.356 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@511d5d04
[DEBUG] 2020-02-22 11:31:57.356 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@511d5d04
[DEBUG] 2020-02-22 11:31:57.358 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@11653e3b
[DEBUG] 2020-02-22 11:31:57.359 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@11653e3b
[DEBUG] 2020-02-22 11:31:57.359 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@11653e3b
[DEBUG] 2020-02-22 11:31:57.361 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7c974942
[DEBUG] 2020-02-22 11:31:57.362 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4d4960c8
[DEBUG] 2020-02-22 11:31:57.363 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6ce90bc5
[DEBUG] 2020-02-22 11:31:57.364 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6ce90bc5
[DEBUG] 2020-02-22 11:31:57.364 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6ce90bc5
[DEBUG] 2020-02-22 11:31:57.366 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@27f1bbe0
[DEBUG] 2020-02-22 11:31:57.367 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@27f1bbe0
[DEBUG] 2020-02-22 11:31:57.367 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@27f1bbe0
[DEBUG] 2020-02-22 11:31:57.367 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2d84cb86
[DEBUG] 2020-02-22 11:31:57.368 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@baf1bb3
[DEBUG] 2020-02-22 11:31:57.372 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4b1abd11
[DEBUG] 2020-02-22 11:31:57.372 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b1abd11
[DEBUG] 2020-02-22 11:31:57.373 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@40021799
[DEBUG] 2020-02-22 11:31:57.377 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@19593091
[DEBUG] 2020-02-22 11:31:57.377 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@19593091
[DEBUG] 2020-02-22 11:31:57.382 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@67a056f1
[DEBUG] 2020-02-22 11:31:57.382 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@67a056f1
[DEBUG] 2020-02-22 11:31:57.384 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@afb5821
[DEBUG] 2020-02-22 11:31:57.385 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f879bab
[DEBUG] 2020-02-22 11:31:57.388 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@59712875
[DEBUG] 2020-02-22 11:31:57.394 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@54da32dc
[DEBUG] 2020-02-22 11:31:57.394 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@54da32dc
[DEBUG] 2020-02-22 11:31:57.395 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@22fba58c
[DEBUG] 2020-02-22 11:31:57.396 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7e8a46b7
[DEBUG] 2020-02-22 11:31:57.396 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2fe88a09
[DEBUG] 2020-02-22 11:31:57.397 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1917d90f
[DEBUG] 2020-02-22 11:31:57.397 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@66bfd864
[DEBUG] 2020-02-22 11:31:57.397 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4aac85fa
[DEBUG] 2020-02-22 11:31:57.398 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@21fff664
[DEBUG] 2020-02-22 11:31:57.398 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6079cf5
[DEBUG] 2020-02-22 11:31:57.505 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-22 11:31:57.507 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-22 11:31:57.508 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-22 11:31:57.509 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-22 11:31:57.510 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-22 11:31:57.512 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-22 11:31:57.519 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-22 11:31:57.523 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-22 11:31:57.525 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-22 11:31:57.527 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-22 11:31:57.528 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-22 11:31:57.529 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-22 11:31:57.530 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-22 11:31:57.532 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-22 11:31:57.542 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_carb_conscious
[INFO ] 2020-02-22 11:31:57.543 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-22 11:31:57.543 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-22 11:31:57.965 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-22 11:32:00.079 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-02-22 11:32:00.080 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-22 11:32:00.081 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-22 11:32:00.159 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-22 11:32:00.212 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-22 11:32:00.404 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-22 11:32:00.514 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-22 11:32:00.520 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@43da41e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@148c7c4b]
[DEBUG] 2020-02-22 11:32:00.623 [main] AnnotationMetadataSourceProcessorImpl - Encountered a non-categorized annotated class [com.mattanderson.carbConscious.entity.UserRole]; ignoring
[DEBUG] 2020-02-22 11:32:00.653 [main] AnnotationBinder - Binding entity from annotated class: com.mattanderson.carbConscious.entity.User
[DEBUG] 2020-02-22 11:32:00.715 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-22 11:32:00.731 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-02-22 11:32:00.737 [main] EntityBinder - Bind entity com.mattanderson.carbConscious.entity.User on table USERS
[DEBUG] 2020-02-22 11:32:00.824 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-22 11:32:00.830 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-22 11:32:00.833 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:id]
[DEBUG] 2020-02-22 11:32:00.837 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-22 11:32:00.841 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-22 11:32:00.849 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-22 11:32:00.852 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=creation_datetime, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-22 11:32:00.853 [main] PropertyBinder - MetadataSourceProcessor property creationDateTime with lazy=false
[DEBUG] 2020-02-22 11:32:00.853 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:creationDateTime]
[DEBUG] 2020-02-22 11:32:00.854 [main] SimpleValueBinder - building SimpleValue for creationDateTime
[DEBUG] 2020-02-22 11:32:00.854 [main] PropertyBinder - Building property creationDateTime
[DEBUG] 2020-02-22 11:32:00.855 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-22 11:32:00.855 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-22 11:32:00.855 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:email]
[DEBUG] 2020-02-22 11:32:00.856 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-22 11:32:00.856 [main] PropertyBinder - Building property email
[DEBUG] 2020-02-22 11:32:00.856 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-22 11:32:00.857 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-22 11:32:00.857 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:firstName]
[DEBUG] 2020-02-22 11:32:00.857 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-22 11:32:00.858 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-02-22 11:32:00.858 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-22 11:32:00.858 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-22 11:32:00.858 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:lastName]
[DEBUG] 2020-02-22 11:32:00.859 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-22 11:32:00.859 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-02-22 11:32:00.860 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-22 11:32:00.861 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-22 11:32:00.861 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:password]
[DEBUG] 2020-02-22 11:32:00.861 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-22 11:32:00.861 [main] PropertyBinder - Building property password
[DEBUG] 2020-02-22 11:32:00.863 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=update_datetime, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-22 11:32:00.864 [main] PropertyBinder - MetadataSourceProcessor property updateDateTime with lazy=false
[DEBUG] 2020-02-22 11:32:00.864 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:updateDateTime]
[DEBUG] 2020-02-22 11:32:00.864 [main] SimpleValueBinder - building SimpleValue for updateDateTime
[DEBUG] 2020-02-22 11:32:00.864 [main] PropertyBinder - Building property updateDateTime
[DEBUG] 2020-02-22 11:32:00.867 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-22 11:32:00.867 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=userName, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-22 11:32:00.870 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=null, insertable=true, updatable=true, unique=false}
