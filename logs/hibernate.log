[DEBUG] 2020-02-23 11:45:26.669 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-23 11:45:26.674 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-23 11:45:26.680 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-23 11:45:26.808 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-23 11:45:26.816 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-23 11:45:27.181 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-23 11:45:27.182 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-23 11:45:27.195 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-23 11:45:27.737 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-23 11:45:27.817 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-23 11:45:27.821 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-23 11:45:27.892 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-23 11:45:28.033 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@14faa38c
[DEBUG] 2020-02-23 11:45:28.033 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@14faa38c
[DEBUG] 2020-02-23 11:45:28.034 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@14faa38c
[DEBUG] 2020-02-23 11:45:28.035 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2fb5fe30
[DEBUG] 2020-02-23 11:45:28.036 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b6e8f77
[DEBUG] 2020-02-23 11:45:28.036 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6e28bb87
[DEBUG] 2020-02-23 11:45:28.038 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6d6cb754
[DEBUG] 2020-02-23 11:45:28.039 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6d6cb754
[DEBUG] 2020-02-23 11:45:28.039 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6d6cb754
[DEBUG] 2020-02-23 11:45:28.040 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@213deac2
[DEBUG] 2020-02-23 11:45:28.041 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@213deac2
[DEBUG] 2020-02-23 11:45:28.041 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@213deac2
[DEBUG] 2020-02-23 11:45:28.042 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5b5caf08
[DEBUG] 2020-02-23 11:45:28.042 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5b5caf08
[DEBUG] 2020-02-23 11:45:28.042 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b5caf08
[DEBUG] 2020-02-23 11:45:28.043 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3e6f3bae
[DEBUG] 2020-02-23 11:45:28.043 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3e6f3bae
[DEBUG] 2020-02-23 11:45:28.044 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3e6f3bae
[DEBUG] 2020-02-23 11:45:28.045 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@d400943
[DEBUG] 2020-02-23 11:45:28.045 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@d400943
[DEBUG] 2020-02-23 11:45:28.045 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@d400943
[DEBUG] 2020-02-23 11:45:28.046 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@aed0151
[DEBUG] 2020-02-23 11:45:28.046 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@aed0151
[DEBUG] 2020-02-23 11:45:28.046 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@aed0151
[DEBUG] 2020-02-23 11:45:28.047 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3a60c416
[DEBUG] 2020-02-23 11:45:28.047 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3a60c416
[DEBUG] 2020-02-23 11:45:28.048 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3a60c416
[DEBUG] 2020-02-23 11:45:28.048 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6d64b553
[DEBUG] 2020-02-23 11:45:28.049 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6d64b553
[DEBUG] 2020-02-23 11:45:28.050 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3bc735b3
[DEBUG] 2020-02-23 11:45:28.050 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3bc735b3
[DEBUG] 2020-02-23 11:45:28.051 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5ec77191
[DEBUG] 2020-02-23 11:45:28.051 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5ec77191
[DEBUG] 2020-02-23 11:45:28.052 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@69c6161d
[DEBUG] 2020-02-23 11:45:28.052 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3eb631b8
[DEBUG] 2020-02-23 11:45:28.053 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6ef7623
[DEBUG] 2020-02-23 11:45:28.053 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6ef7623
[DEBUG] 2020-02-23 11:45:28.054 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@41477a6d
[DEBUG] 2020-02-23 11:45:28.055 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@41477a6d
[DEBUG] 2020-02-23 11:45:28.061 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@17ca8b92
[DEBUG] 2020-02-23 11:45:28.062 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@17ca8b92
[DEBUG] 2020-02-23 11:45:28.063 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5bb3131b
[DEBUG] 2020-02-23 11:45:28.063 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5bb3131b
[DEBUG] 2020-02-23 11:45:28.065 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6a933be2
[DEBUG] 2020-02-23 11:45:28.065 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6a933be2
[DEBUG] 2020-02-23 11:45:28.066 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@67207d8a
[DEBUG] 2020-02-23 11:45:28.066 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@67207d8a
[DEBUG] 2020-02-23 11:45:28.068 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28cb9120
[DEBUG] 2020-02-23 11:45:28.068 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28cb9120
[DEBUG] 2020-02-23 11:45:28.070 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@69b2f8e5
[DEBUG] 2020-02-23 11:45:28.070 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@69b2f8e5
[DEBUG] 2020-02-23 11:45:28.072 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d847d32
[DEBUG] 2020-02-23 11:45:28.072 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d847d32
[DEBUG] 2020-02-23 11:45:28.073 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1ee29c84
[DEBUG] 2020-02-23 11:45:28.074 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1ee29c84
[DEBUG] 2020-02-23 11:45:28.075 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@d02f8d
[DEBUG] 2020-02-23 11:45:28.075 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d02f8d
[DEBUG] 2020-02-23 11:45:28.077 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@43b0ade
[DEBUG] 2020-02-23 11:45:28.077 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@43b0ade
[DEBUG] 2020-02-23 11:45:28.077 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@43b0ade
[DEBUG] 2020-02-23 11:45:28.079 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@13d186db
[DEBUG] 2020-02-23 11:45:28.080 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3fbfa96
[DEBUG] 2020-02-23 11:45:28.080 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3fbfa96
[DEBUG] 2020-02-23 11:45:28.080 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3fbfa96
[DEBUG] 2020-02-23 11:45:28.086 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@65327f5
[DEBUG] 2020-02-23 11:45:28.087 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@349d0836
[DEBUG] 2020-02-23 11:45:28.087 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@349d0836
[DEBUG] 2020-02-23 11:45:28.088 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4917d36b
[DEBUG] 2020-02-23 11:45:28.088 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4917d36b
[DEBUG] 2020-02-23 11:45:28.089 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4905c46b
[DEBUG] 2020-02-23 11:45:28.090 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4905c46b
[DEBUG] 2020-02-23 11:45:28.091 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@693e4d19
[DEBUG] 2020-02-23 11:45:28.091 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@693e4d19
[DEBUG] 2020-02-23 11:45:28.092 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@57bd802b
[DEBUG] 2020-02-23 11:45:28.092 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@57bd802b
[DEBUG] 2020-02-23 11:45:28.093 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5183d589
[DEBUG] 2020-02-23 11:45:28.095 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@11653e3b
[DEBUG] 2020-02-23 11:45:28.095 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@11653e3b
[DEBUG] 2020-02-23 11:45:28.095 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@11653e3b
[DEBUG] 2020-02-23 11:45:28.096 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7c974942
[DEBUG] 2020-02-23 11:45:28.096 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7c974942
[DEBUG] 2020-02-23 11:45:28.097 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7c974942
[DEBUG] 2020-02-23 11:45:28.098 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6b580b88
[DEBUG] 2020-02-23 11:45:28.098 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6ce90bc5
[DEBUG] 2020-02-23 11:45:28.099 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27f1bbe0
[DEBUG] 2020-02-23 11:45:28.099 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27f1bbe0
[DEBUG] 2020-02-23 11:45:28.099 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27f1bbe0
[DEBUG] 2020-02-23 11:45:28.100 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7c28c1
[DEBUG] 2020-02-23 11:45:28.101 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7c28c1
[DEBUG] 2020-02-23 11:45:28.101 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7c28c1
[DEBUG] 2020-02-23 11:45:28.101 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4482469c
[DEBUG] 2020-02-23 11:45:28.102 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@ddf20fd
[DEBUG] 2020-02-23 11:45:28.104 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1b32cd16
[DEBUG] 2020-02-23 11:45:28.104 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1b32cd16
[DEBUG] 2020-02-23 11:45:28.104 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@264c5d07
[DEBUG] 2020-02-23 11:45:28.107 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4e868ef5
[DEBUG] 2020-02-23 11:45:28.107 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4e868ef5
[DEBUG] 2020-02-23 11:45:28.109 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7fedfe27
[DEBUG] 2020-02-23 11:45:28.109 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7fedfe27
[DEBUG] 2020-02-23 11:45:28.110 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56ccd751
[DEBUG] 2020-02-23 11:45:28.110 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1d207fad
[DEBUG] 2020-02-23 11:45:28.111 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@37a64f9d
[DEBUG] 2020-02-23 11:45:28.114 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1917d90f
[DEBUG] 2020-02-23 11:45:28.114 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1917d90f
[DEBUG] 2020-02-23 11:45:28.115 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6079cf5
[DEBUG] 2020-02-23 11:45:28.115 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1e6308a9
[DEBUG] 2020-02-23 11:45:28.115 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@30cecdca
[DEBUG] 2020-02-23 11:45:28.115 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6edc4161
[DEBUG] 2020-02-23 11:45:28.115 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5486887b
[DEBUG] 2020-02-23 11:45:28.115 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5226e402
[DEBUG] 2020-02-23 11:45:28.116 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1440c311
[DEBUG] 2020-02-23 11:45:28.116 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@189b5fb1
[DEBUG] 2020-02-23 11:45:28.156 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-23 11:45:28.156 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-23 11:45:28.157 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-23 11:45:28.158 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-23 11:45:28.158 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-23 11:45:28.159 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-23 11:45:28.160 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-23 11:45:28.162 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-23 11:45:28.166 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-23 11:45:28.167 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-23 11:45:28.167 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-23 11:45:28.168 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-23 11:45:28.168 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-23 11:45:28.169 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-23 11:45:28.176 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_carb_conscious
[INFO ] 2020-02-23 11:45:28.177 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-23 11:45:28.177 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-23 11:45:28.403 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-23 11:45:29.307 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-02-23 11:45:29.309 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-23 11:45:29.309 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-23 11:45:29.336 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-23 11:45:29.364 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-23 11:45:29.390 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-23 11:45:29.431 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-23 11:45:29.437 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bd3d05e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6aba5d30]
[DEBUG] 2020-02-23 11:45:29.490 [main] AnnotationBinder - Binding entity from annotated class: com.mattanderson.carbConscious.entity.User
[DEBUG] 2020-02-23 11:45:29.535 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-23 11:45:29.554 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-02-23 11:45:29.560 [main] EntityBinder - Bind entity com.mattanderson.carbConscious.entity.User on table USERS
[DEBUG] 2020-02-23 11:45:29.643 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.651 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-23 11:45:29.654 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:id]
[DEBUG] 2020-02-23 11:45:29.659 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-23 11:45:29.662 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-23 11:45:29.668 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-23 11:45:29.670 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=creation_datetime, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.671 [main] PropertyBinder - MetadataSourceProcessor property creationDateTime with lazy=false
[DEBUG] 2020-02-23 11:45:29.671 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:creationDateTime]
[DEBUG] 2020-02-23 11:45:29.671 [main] SimpleValueBinder - building SimpleValue for creationDateTime
[DEBUG] 2020-02-23 11:45:29.671 [main] PropertyBinder - Building property creationDateTime
[DEBUG] 2020-02-23 11:45:29.672 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.672 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-23 11:45:29.673 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:email]
[DEBUG] 2020-02-23 11:45:29.673 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-23 11:45:29.673 [main] PropertyBinder - Building property email
[DEBUG] 2020-02-23 11:45:29.673 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.674 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-23 11:45:29.674 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:firstName]
[DEBUG] 2020-02-23 11:45:29.674 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-23 11:45:29.674 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-02-23 11:45:29.675 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.675 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-23 11:45:29.675 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:lastName]
[DEBUG] 2020-02-23 11:45:29.675 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-23 11:45:29.675 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-02-23 11:45:29.676 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.676 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-23 11:45:29.676 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:password]
[DEBUG] 2020-02-23 11:45:29.676 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-23 11:45:29.676 [main] PropertyBinder - Building property password
[DEBUG] 2020-02-23 11:45:29.680 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-23 11:45:29.680 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=roles, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.682 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.693 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.694 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.695 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2020-02-23 11:45:29.697 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-23 11:45:29.697 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2020-02-23 11:45:29.698 [main] CollectionBinder - Collection role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:29.701 [main] PropertyBinder - Building property roles
[DEBUG] 2020-02-23 11:45:29.702 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=update_datetime, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.702 [main] PropertyBinder - MetadataSourceProcessor property updateDateTime with lazy=false
[DEBUG] 2020-02-23 11:45:29.703 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:updateDateTime]
[DEBUG] 2020-02-23 11:45:29.703 [main] SimpleValueBinder - building SimpleValue for updateDateTime
[DEBUG] 2020-02-23 11:45:29.703 [main] PropertyBinder - Building property updateDateTime
[DEBUG] 2020-02-23 11:45:29.703 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.703 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-02-23 11:45:29.704 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:userName]
[DEBUG] 2020-02-23 11:45:29.704 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-02-23 11:45:29.704 [main] PropertyBinder - Building property userName
[DEBUG] 2020-02-23 11:45:29.706 [main] AnnotationBinder - Binding entity from annotated class: com.mattanderson.carbConscious.entity.UserRole
[DEBUG] 2020-02-23 11:45:29.707 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-23 11:45:29.707 [main] EntityBinder - Import with entity name UserRole
[DEBUG] 2020-02-23 11:45:29.708 [main] EntityBinder - Bind entity com.mattanderson.carbConscious.entity.UserRole on table USER_ROLES
[DEBUG] 2020-02-23 11:45:29.716 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER_ROLES), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.716 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-23 11:45:29.716 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.UserRole:id]
[DEBUG] 2020-02-23 11:45:29.716 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-23 11:45:29.716 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-23 11:45:29.717 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-23 11:45:29.717 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER_ROLES), mappingColumn=creation_datetime, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.717 [main] PropertyBinder - MetadataSourceProcessor property creationDateTime with lazy=false
[DEBUG] 2020-02-23 11:45:29.717 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.UserRole:creationDateTime]
[DEBUG] 2020-02-23 11:45:29.717 [main] SimpleValueBinder - building SimpleValue for creationDateTime
[DEBUG] 2020-02-23 11:45:29.718 [main] PropertyBinder - Building property creationDateTime
[DEBUG] 2020-02-23 11:45:29.718 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER_ROLES), mappingColumn=role_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.718 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2020-02-23 11:45:29.718 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.UserRole:name]
[DEBUG] 2020-02-23 11:45:29.718 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2020-02-23 11:45:29.718 [main] PropertyBinder - Building property name
[DEBUG] 2020-02-23 11:45:29.719 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_name', referencedColumn='user_name', mappedBy=''}
[DEBUG] 2020-02-23 11:45:29.719 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USER_ROLES), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-23 11:45:29.721 [main] PropertyBinder - Building property user
[DEBUG] 2020-02-23 11:45:29.723 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-23 11:45:29.724 [main] SimpleValueBinder - Starting fillSimpleValue for creationDateTime
[DEBUG] 2020-02-23 11:45:29.724 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-23 11:45:29.724 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-23 11:45:29.724 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-23 11:45:29.724 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-23 11:45:29.724 [main] SimpleValueBinder - Starting fillSimpleValue for updateDateTime
[DEBUG] 2020-02-23 11:45:29.724 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-02-23 11:45:29.724 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-23 11:45:29.725 [main] SimpleValueBinder - Starting fillSimpleValue for creationDateTime
[DEBUG] 2020-02-23 11:45:29.725 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2020-02-23 11:45:29.734 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2020-02-23 11:45:29.734 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user_roles]
[DEBUG] 2020-02-23 11:45:29.734 [main] CollectionSecondPass - Second pass for collection: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:29.734 [main] CollectionBinder - Binding a OneToMany: com.mattanderson.carbConscious.entity.User.roles through a foreign key
[DEBUG] 2020-02-23 11:45:29.735 [main] CollectionBinder - Mapping collection: com.mattanderson.carbConscious.entity.User.roles -> USER_ROLES
[DEBUG] 2020-02-23 11:45:29.736 [main] TableBinder - Retrieving property com.mattanderson.carbConscious.entity.UserRole.user
[DEBUG] 2020-02-23 11:45:29.736 [main] CollectionSecondPass - Mapped collection key: user_name, one-to-many: com.mattanderson.carbConscious.entity.UserRole
[DEBUG] 2020-02-23 11:45:29.736 [main] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-23 11:45:29.737 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.mattanderson.carbConscious.entity.User
[DEBUG] 2020-02-23 11:45:29.740 [main] InFlightMetadataCollectorImpl - Processing association property references
[DEBUG] 2020-02-23 11:45:29.740 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.mattanderson.carbConscious.entity.User
[DEBUG] 2020-02-23 11:45:29.832 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-23 11:45:29.833 [main] Settings - SessionFactory name : null
[DEBUG] 2020-02-23 11:45:29.834 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-23 11:45:29.834 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-23 11:45:29.834 [main] Settings - Statistics: disabled
[DEBUG] 2020-02-23 11:45:29.834 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-23 11:45:29.834 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-23 11:45:29.834 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-23 11:45:29.834 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-23 11:45:29.835 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-23 11:45:29.835 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-23 11:45:29.835 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-23 11:45:29.835 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-02-23 11:45:29.835 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-23 11:45:29.835 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-23 11:45:29.835 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-23 11:45:29.835 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-23 11:45:29.835 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-02-23 11:45:29.835 [main] Settings - Named query checking : enabled
[DEBUG] 2020-02-23 11:45:29.835 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-02-23 11:45:29.836 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-23 11:45:29.836 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-23 11:45:29.836 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-23 11:45:29.836 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-23 11:45:29.836 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-23 11:45:29.836 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-23 11:45:29.836 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-23 11:45:29.836 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-02-23 11:45:29.836 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-23 11:45:29.837 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-23 11:45:29.837 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-23 11:45:29.837 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-23 11:45:29.837 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-23 11:45:29.837 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-23 11:45:29.837 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-23 11:45:29.837 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-02-23 11:45:29.837 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-23 11:45:29.837 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-23 11:45:29.838 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-23 11:45:29.899 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-23 11:45:29.921 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-23 11:45:29.922 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/carbConscious/target/test-classes:/home/student/IdeaProjects/carbConscious/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-validator/5.4.1.Final/hibernate-validator-5.4.1.Final.jar:/home/student/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/student/.m2/repository/org/hibernate/validator/hibernate-validator-annotation-processor/6.1.2.Final/hibernate-validator-annotation-processor-6.1.2.Final.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.mattanderson.carbConscious.persistence.UserDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-40-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_carb_conscious, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.6, user.dir=/home/student/IdeaProjects/carbConscious, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@f324455, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_carb_conscious, java.class.version=55.0}
[INFO ] 2020-02-23 11:45:29.954 [main] Version - HV000001: Hibernate Validator 5.4.1.Final
[DEBUG] 2020-02-23 11:45:29.968 [main] DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[DEBUG] 2020-02-23 11:45:29.969 [main] DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[DEBUG] 2020-02-23 11:45:29.972 [main] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[DEBUG] 2020-02-23 11:45:29.974 [main] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[DEBUG] 2020-02-23 11:45:29.975 [main] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[DEBUG] 2020-02-23 11:45:29.975 [main] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[DEBUG] 2020-02-23 11:45:29.988 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-02-23 11:45:29.988 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-23 11:45:29.989 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-23 11:45:29.989 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bd3d05e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@42a0501e]
[DEBUG] 2020-02-23 11:45:30.051 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.mattanderson.carbConscious.entity.UserRole] is safe
[DEBUG] 2020-02-23 11:45:30.051 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.mattanderson.carbConscious.entity.UserRole
[DEBUG] 2020-02-23 11:45:30.062 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.mattanderson.carbConscious.entity.UserRole] is safe
[DEBUG] 2020-02-23 11:45:30.062 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.mattanderson.carbConscious.entity.UserRole
[DEBUG] 2020-02-23 11:45:30.327 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.mattanderson.carbConscious.entity.User] is safe
[DEBUG] 2020-02-23 11:45:30.327 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.mattanderson.carbConscious.entity.User
[DEBUG] 2020-02-23 11:45:30.330 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.mattanderson.carbConscious.entity.User] is safe
[DEBUG] 2020-02-23 11:45:30.330 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.mattanderson.carbConscious.entity.User
[DEBUG] 2020-02-23 11:45:30.390 [main] AbstractCollectionPersister - Static SQL for collection: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:30.390 [main] AbstractCollectionPersister -  Row insert: update USER_ROLES set user_name=? where id=?
[DEBUG] 2020-02-23 11:45:30.390 [main] AbstractCollectionPersister -  Row update: update USER_ROLES set  where id=?
[DEBUG] 2020-02-23 11:45:30.390 [main] AbstractCollectionPersister -  Row delete: update USER_ROLES set user_name=null where user_name=? and id=?
[DEBUG] 2020-02-23 11:45:30.391 [main] AbstractCollectionPersister -  One-shot delete: update USER_ROLES set user_name=null where user_name=?
[DEBUG] 2020-02-23 11:45:30.396 [main] AbstractEntityPersister - Static SQL for entity: com.mattanderson.carbConscious.entity.UserRole
[DEBUG] 2020-02-23 11:45:30.396 [main] AbstractEntityPersister -  Version select: select id from USER_ROLES where id =?
[DEBUG] 2020-02-23 11:45:30.396 [main] AbstractEntityPersister -  Snapshot select: select userrole_.id, userrole_.creation_datetime as creation2_0_, userrole_.role_name as role_nam3_0_, userrole_.user_name as user_nam4_0_ from USER_ROLES userrole_ where userrole_.id=?
[DEBUG] 2020-02-23 11:45:30.396 [main] AbstractEntityPersister -  Insert 0: insert into USER_ROLES (creation_datetime, role_name, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2020-02-23 11:45:30.396 [main] AbstractEntityPersister -  Update 0: update USER_ROLES set creation_datetime=?, role_name=?, user_name=? where id=?
[DEBUG] 2020-02-23 11:45:30.396 [main] AbstractEntityPersister -  Delete 0: delete from USER_ROLES where id=?
[DEBUG] 2020-02-23 11:45:30.396 [main] AbstractEntityPersister -  Identity insert: insert into USER_ROLES (creation_datetime, role_name, user_name) values (?, ?, ?)
[DEBUG] 2020-02-23 11:45:30.418 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@566e142]
[DEBUG] 2020-02-23 11:45:30.419 [main] MetamodelGraphWalker - Visiting attribute path : creationDateTime
[DEBUG] 2020-02-23 11:45:30.420 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-23 11:45:30.420 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-23 11:45:30.423 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5403799b]
[DEBUG] 2020-02-23 11:45:30.425 [main] MetamodelGraphWalker - Visiting attribute path : user.creationDateTime
[DEBUG] 2020-02-23 11:45:30.425 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-23 11:45:30.425 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-23 11:45:30.425 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-23 11:45:30.425 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-23 11:45:30.425 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-23 11:45:30.425 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-23 11:45:30.426 [main] MetamodelGraphWalker - Visiting attribute path : user.updateDateTime
[DEBUG] 2020-02-23 11:45:30.426 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2020-02-23 11:45:30.426 [main] MetamodelGraphWalker - Visiting attribute path : user._com_mattanderson_carbConscious_entity_UserRole_user
[DEBUG] 2020-02-23 11:45:30.427 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@59a2388e]
[DEBUG] 2020-02-23 11:45:30.429 [main] MetamodelGraphWalker - Visiting attribute path : user._com_mattanderson_carbConscious_entity_UserRole_user.userName
[DEBUG] 2020-02-23 11:45:30.429 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-23 11:45:30.441 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-23 11:45:30.445 [main] LoadPlanTreePrinter - LoadPlan(entity=com.mattanderson.carbConscious.entity.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.mattanderson.carbConscious.entity.UserRole, querySpaceUid=<gen:0>, path=com.mattanderson.carbConscious.entity.UserRole)
          - EntityAttributeFetchImpl(entity=com.mattanderson.carbConscious.entity.User, querySpaceUid=<gen:1>, path=com.mattanderson.carbConscious.entity.UserRole.user)
             - CompositeAttributeFetchImpl(composite=com.mattanderson.carbConscious.entity.User, querySpaceUid=<gen:2>, path=com.mattanderson.carbConscious.entity.UserRole.user._com_mattanderson_carbConscious_entity_UserRole_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.mattanderson.carbConscious.entity.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.mattanderson.carbConscious.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_mattanderson_carbConscious_entity_UserRole_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-23 11:45:30.448 [main] EntityLoader - Static select for entity com.mattanderson.carbConscious.entity.UserRole [NONE]: select userrole0_.id as id1_0_0_, userrole0_.creation_datetime as creation2_0_0_, userrole0_.role_name as role_nam3_0_0_, userrole0_.user_name as user_nam4_0_0_, user1_.id as id1_1_1_, user1_.creation_datetime as creation2_1_1_, user1_.email as email3_1_1_, user1_.first_name as first_na4_1_1_, user1_.last_name as last_nam5_1_1_, user1_.password as password6_1_1_, user1_.update_datetime as update_d7_1_1_, user1_.user_name as user_nam8_1_1_ from USER_ROLES userrole0_ left outer join USERS user1_ on userrole0_.user_name=user1_.user_name where userrole0_.id=?
[DEBUG] 2020-02-23 11:45:30.448 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@432af457]
[DEBUG] 2020-02-23 11:45:30.448 [main] MetamodelGraphWalker - Visiting attribute path : creationDateTime
[DEBUG] 2020-02-23 11:45:30.448 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-23 11:45:30.448 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-23 11:45:30.448 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@519c6fcc]
[DEBUG] 2020-02-23 11:45:30.449 [main] MetamodelGraphWalker - Visiting attribute path : user.creationDateTime
[DEBUG] 2020-02-23 11:45:30.449 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2020-02-23 11:45:30.449 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2020-02-23 11:45:30.449 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2020-02-23 11:45:30.449 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2020-02-23 11:45:30.449 [main] MetamodelGraphWalker - Visiting attribute path : user.roles
[DEBUG] 2020-02-23 11:45:30.449 [main] MetamodelGraphWalker - Property path deemed to be circular : user.roles
[DEBUG] 2020-02-23 11:45:30.449 [main] MetamodelGraphWalker - Visiting attribute path : user.updateDateTime
[DEBUG] 2020-02-23 11:45:30.449 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2020-02-23 11:45:30.449 [main] MetamodelGraphWalker - Visiting attribute path : user._com_mattanderson_carbConscious_entity_UserRole_user
[DEBUG] 2020-02-23 11:45:30.449 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@7ecda95b]
[DEBUG] 2020-02-23 11:45:30.449 [main] MetamodelGraphWalker - Visiting attribute path : user._com_mattanderson_carbConscious_entity_UserRole_user.userName
[DEBUG] 2020-02-23 11:45:30.449 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-23 11:45:30.450 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-23 11:45:30.450 [main] LoadPlanTreePrinter - LoadPlan(entity=com.mattanderson.carbConscious.entity.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.mattanderson.carbConscious.entity.UserRole, querySpaceUid=<gen:0>, path=com.mattanderson.carbConscious.entity.UserRole)
          - EntityAttributeFetchImpl(entity=com.mattanderson.carbConscious.entity.User, querySpaceUid=<gen:1>, path=com.mattanderson.carbConscious.entity.UserRole.user)
             - CompositeAttributeFetchImpl(composite=com.mattanderson.carbConscious.entity.User, querySpaceUid=<gen:2>, path=com.mattanderson.carbConscious.entity.UserRole.user._com_mattanderson_carbConscious_entity_UserRole_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.mattanderson.carbConscious.entity.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.mattanderson.carbConscious.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(_com_mattanderson_carbConscious_entity_UserRole_user)) : <gen:1> -> <gen:2>
                   - CompositeQuerySpaceImpl(uid=<gen:2>)
                      - SQL table alias mapping - user1_

[DEBUG] 2020-02-23 11:45:30.451 [main] EntityLoader - Static select for entity com.mattanderson.carbConscious.entity.UserRole [READ]: select userrole0_.id as id1_0_0_, userrole0_.creation_datetime as creation2_0_0_, userrole0_.role_name as role_nam3_0_0_, userrole0_.user_name as user_nam4_0_0_, user1_.id as id1_1_1_, user1_.creation_datetime as creation2_1_1_, user1_.email as email3_1_1_, user1_.first_name as first_na4_1_1_, user1_.last_name as last_nam5_1_1_, user1_.password as password6_1_1_, user1_.update_datetime as update_d7_1_1_, user1_.user_name as user_nam8_1_1_ from USER_ROLES userrole0_ left outer join USERS user1_ on userrole0_.user_name=user1_.user_name where userrole0_.id=?
[DEBUG] 2020-02-23 11:45:30.464 [main] Loader - Static select for action ACTION_MERGE on entity com.mattanderson.carbConscious.entity.UserRole: select userrole0_.id as id1_0_0_, userrole0_.creation_datetime as creation2_0_0_, userrole0_.role_name as role_nam3_0_0_, userrole0_.user_name as user_nam4_0_0_ from USER_ROLES userrole0_ where userrole0_.id=?
[DEBUG] 2020-02-23 11:45:30.464 [main] Loader - Static select for action ACTION_REFRESH on entity com.mattanderson.carbConscious.entity.UserRole: select userrole0_.id as id1_0_0_, userrole0_.creation_datetime as creation2_0_0_, userrole0_.role_name as role_nam3_0_0_, userrole0_.user_name as user_nam4_0_0_ from USER_ROLES userrole0_ where userrole0_.id=?
[DEBUG] 2020-02-23 11:45:30.465 [main] AbstractEntityPersister - Static SQL for entity: com.mattanderson.carbConscious.entity.User
[DEBUG] 2020-02-23 11:45:30.465 [main] AbstractEntityPersister -  Version select: select id from USERS where id =?
[DEBUG] 2020-02-23 11:45:30.465 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.creation_datetime as creation2_1_, user_.email as email3_1_, user_.first_name as first_na4_1_, user_.last_name as last_nam5_1_, user_.password as password6_1_, user_.update_datetime as update_d7_1_, user_.user_name as user_nam8_1_ from USERS user_ where user_.id=?
[DEBUG] 2020-02-23 11:45:30.465 [main] AbstractEntityPersister -  Insert 0: insert into USERS (creation_datetime, email, first_name, last_name, password, update_datetime, user_name, id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-23 11:45:30.465 [main] AbstractEntityPersister -  Update 0: update USERS set creation_datetime=?, email=?, first_name=?, last_name=?, password=?, update_datetime=?, user_name=? where id=?
[DEBUG] 2020-02-23 11:45:30.465 [main] AbstractEntityPersister -  Delete 0: delete from USERS where id=?
[DEBUG] 2020-02-23 11:45:30.465 [main] AbstractEntityPersister -  Identity insert: insert into USERS (creation_datetime, email, first_name, last_name, password, update_datetime, user_name) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-23 11:45:30.465 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55acec99]
[DEBUG] 2020-02-23 11:45:30.465 [main] MetamodelGraphWalker - Visiting attribute path : creationDateTime
[DEBUG] 2020-02-23 11:45:30.465 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-23 11:45:30.465 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-23 11:45:30.465 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-23 11:45:30.465 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-23 11:45:30.465 [main] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-23 11:45:30.466 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f8dfe74]
[DEBUG] 2020-02-23 11:45:30.467 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@623e0631]
[DEBUG] 2020-02-23 11:45:30.469 [main] MetamodelGraphWalker - Visiting attribute path : roles.creationDateTime
[DEBUG] 2020-02-23 11:45:30.469 [main] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-23 11:45:30.469 [main] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-23 11:45:30.469 [main] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-23 11:45:30.470 [main] MetamodelGraphWalker - Visiting attribute path : updateDateTime
[DEBUG] 2020-02-23 11:45:30.470 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-02-23 11:45:30.470 [main] MetamodelGraphWalker - Visiting attribute path : _com_mattanderson_carbConscious_entity_UserRole_user
[DEBUG] 2020-02-23 11:45:30.470 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@79b18230]
[DEBUG] 2020-02-23 11:45:30.470 [main] MetamodelGraphWalker - Visiting attribute path : _com_mattanderson_carbConscious_entity_UserRole_user.userName
[DEBUG] 2020-02-23 11:45:30.471 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-23 11:45:30.471 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-23 11:45:30.474 [main] LoadPlanTreePrinter - LoadPlan(entity=com.mattanderson.carbConscious.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.mattanderson.carbConscious.entity.User, querySpaceUid=<gen:0>, path=com.mattanderson.carbConscious.entity.User)
          - CollectionAttributeFetchImpl(collection=com.mattanderson.carbConscious.entity.User.roles, querySpaceUid=<gen:1>, path=com.mattanderson.carbConscious.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.mattanderson.carbConscious.entity.UserRole, querySpaceUid=<gen:2>, path=com.mattanderson.carbConscious.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.mattanderson.carbConscious.entity.User, querySpaceUid=<gen:3>, path=com.mattanderson.carbConscious.entity.User._com_mattanderson_carbConscious_entity_UserRole_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.mattanderson.carbConscious.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.mattanderson.carbConscious.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_nam4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.mattanderson.carbConscious.entity.UserRole)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_mattanderson_carbConscious_entity_UserRole_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-23 11:45:30.475 [main] EntityLoader - Static select for entity com.mattanderson.carbConscious.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.creation_datetime as creation2_1_0_, user0_.email as email3_1_0_, user0_.first_name as first_na4_1_0_, user0_.last_name as last_nam5_1_0_, user0_.password as password6_1_0_, user0_.update_datetime as update_d7_1_0_, user0_.user_name as user_nam8_1_0_, roles1_.user_name as user_nam4_0_1_, roles1_.id as id1_0_1_, roles1_.id as id1_0_2_, roles1_.creation_datetime as creation2_0_2_, roles1_.role_name as role_nam3_0_2_, roles1_.user_name as user_nam4_0_2_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.id=?
[DEBUG] 2020-02-23 11:45:30.475 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1eb85f]
[DEBUG] 2020-02-23 11:45:30.475 [main] MetamodelGraphWalker - Visiting attribute path : creationDateTime
[DEBUG] 2020-02-23 11:45:30.475 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-23 11:45:30.475 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-23 11:45:30.475 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-23 11:45:30.475 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-23 11:45:30.475 [main] MetamodelGraphWalker - Visiting attribute path : roles
[DEBUG] 2020-02-23 11:45:30.475 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d42404e]
[DEBUG] 2020-02-23 11:45:30.475 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6af5b246]
[DEBUG] 2020-02-23 11:45:30.475 [main] MetamodelGraphWalker - Visiting attribute path : roles.creationDateTime
[DEBUG] 2020-02-23 11:45:30.475 [main] MetamodelGraphWalker - Visiting attribute path : roles.name
[DEBUG] 2020-02-23 11:45:30.475 [main] MetamodelGraphWalker - Visiting attribute path : roles.user
[DEBUG] 2020-02-23 11:45:30.476 [main] MetamodelGraphWalker - Property path deemed to be circular : roles.user
[DEBUG] 2020-02-23 11:45:30.476 [main] MetamodelGraphWalker - Visiting attribute path : updateDateTime
[DEBUG] 2020-02-23 11:45:30.476 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-02-23 11:45:30.476 [main] MetamodelGraphWalker - Visiting attribute path : _com_mattanderson_carbConscious_entity_UserRole_user
[DEBUG] 2020-02-23 11:45:30.476 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CompositeQuerySpaceImpl@6d6f6860]
[DEBUG] 2020-02-23 11:45:30.476 [main] MetamodelGraphWalker - Visiting attribute path : _com_mattanderson_carbConscious_entity_UserRole_user.userName
[DEBUG] 2020-02-23 11:45:30.476 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-23 11:45:30.476 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-23 11:45:30.477 [main] LoadPlanTreePrinter - LoadPlan(entity=com.mattanderson.carbConscious.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.mattanderson.carbConscious.entity.User, querySpaceUid=<gen:0>, path=com.mattanderson.carbConscious.entity.User)
          - CollectionAttributeFetchImpl(collection=com.mattanderson.carbConscious.entity.User.roles, querySpaceUid=<gen:1>, path=com.mattanderson.carbConscious.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.mattanderson.carbConscious.entity.UserRole, querySpaceUid=<gen:2>, path=com.mattanderson.carbConscious.entity.User.roles.<elements>)
          - CompositeAttributeFetchImpl(composite=com.mattanderson.carbConscious.entity.User, querySpaceUid=<gen:3>, path=com.mattanderson.carbConscious.entity.User._com_mattanderson_carbConscious_entity_UserRole_user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.mattanderson.carbConscious.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.mattanderson.carbConscious.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_nam4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.mattanderson.carbConscious.entity.UserRole)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(_com_mattanderson_carbConscious_entity_UserRole_user)) : <gen:0> -> <gen:3>
             - CompositeQuerySpaceImpl(uid=<gen:3>)
                - SQL table alias mapping - user0_

[DEBUG] 2020-02-23 11:45:30.477 [main] EntityLoader - Static select for entity com.mattanderson.carbConscious.entity.User [READ]: select user0_.id as id1_1_0_, user0_.creation_datetime as creation2_1_0_, user0_.email as email3_1_0_, user0_.first_name as first_na4_1_0_, user0_.last_name as last_nam5_1_0_, user0_.password as password6_1_0_, user0_.update_datetime as update_d7_1_0_, user0_.user_name as user_nam8_1_0_, roles1_.user_name as user_nam4_0_1_, roles1_.id as id1_0_1_, roles1_.id as id1_0_2_, roles1_.creation_datetime as creation2_0_2_, roles1_.role_name as role_nam3_0_2_, roles1_.user_name as user_nam4_0_2_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.id=?
[DEBUG] 2020-02-23 11:45:30.478 [main] Loader - Static select for action ACTION_MERGE on entity com.mattanderson.carbConscious.entity.User: select user0_.id as id1_1_1_, user0_.creation_datetime as creation2_1_1_, user0_.email as email3_1_1_, user0_.first_name as first_na4_1_1_, user0_.last_name as last_nam5_1_1_, user0_.password as password6_1_1_, user0_.update_datetime as update_d7_1_1_, user0_.user_name as user_nam8_1_1_, roles1_.user_name as user_nam4_0_3_, roles1_.id as id1_0_3_, roles1_.id as id1_0_0_, roles1_.creation_datetime as creation2_0_0_, roles1_.role_name as role_nam3_0_0_, roles1_.user_name as user_nam4_0_0_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.id=?
[DEBUG] 2020-02-23 11:45:30.479 [main] Loader - Static select for action ACTION_REFRESH on entity com.mattanderson.carbConscious.entity.User: select user0_.id as id1_1_1_, user0_.creation_datetime as creation2_1_1_, user0_.email as email3_1_1_, user0_.first_name as first_na4_1_1_, user0_.last_name as last_nam5_1_1_, user0_.password as password6_1_1_, user0_.update_datetime as update_d7_1_1_, user0_.user_name as user_nam8_1_1_, roles1_.user_name as user_nam4_0_3_, roles1_.id as id1_0_3_, roles1_.id as id1_0_0_, roles1_.creation_datetime as creation2_0_0_, roles1_.role_name as role_nam3_0_0_, roles1_.user_name as user_nam4_0_0_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.id=?
[DEBUG] 2020-02-23 11:45:30.481 [main] Loader - Static select for entity com.mattanderson.carbConscious.entity.User [NONE]: select user0_.id as id1_1_1_, user0_.creation_datetime as creation2_1_1_, user0_.email as email3_1_1_, user0_.first_name as first_na4_1_1_, user0_.last_name as last_nam5_1_1_, user0_.password as password6_1_1_, user0_.update_datetime as update_d7_1_1_, user0_.user_name as user_nam8_1_1_, roles1_.user_name as user_nam4_0_3_, roles1_.id as id1_0_3_, roles1_.id as id1_0_0_, roles1_.creation_datetime as creation2_0_0_, roles1_.role_name as role_nam3_0_0_, roles1_.user_name as user_nam4_0_0_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.user_name=?
[DEBUG] 2020-02-23 11:45:30.486 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4877919f]
[DEBUG] 2020-02-23 11:45:30.487 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47a7c93e]
[DEBUG] 2020-02-23 11:45:30.487 [main] MetamodelGraphWalker - Visiting attribute path : creationDateTime
[DEBUG] 2020-02-23 11:45:30.487 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2020-02-23 11:45:30.487 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2020-02-23 11:45:30.487 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2020-02-23 11:45:30.487 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-23 11:45:30.489 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-23 11:45:30.489 [main] LoadPlanTreePrinter - LoadPlan(collection=com.mattanderson.carbConscious.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.mattanderson.carbConscious.entity.User.roles, querySpaceUid=<gen:0>, path=[com.mattanderson.carbConscious.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.mattanderson.carbConscious.entity.UserRole, querySpaceUid=<gen:1>, path=[com.mattanderson.carbConscious.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.mattanderson.carbConscious.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_nam4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.mattanderson.carbConscious.entity.UserRole)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2020-02-23 11:45:30.490 [main] CollectionLoader - Static select for collection com.mattanderson.carbConscious.entity.User.roles: select roles0_.user_name as user_nam4_0_0_, roles0_.id as id1_0_0_, roles0_.id as id1_0_1_, roles0_.creation_datetime as creation2_0_1_, roles0_.role_name as role_nam3_0_1_, roles0_.user_name as user_nam4_0_1_ from USER_ROLES roles0_ where roles0_.user_name=?
[DEBUG] 2020-02-23 11:45:30.520 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-23 11:45:30.520 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-23 11:45:30.521 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-23 11:45:30.526 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-23 11:45:30.526 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-23 11:45:30.527 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-23 11:45:30.527 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-23 11:45:30.529 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@70b2fa10
[DEBUG] 2020-02-23 11:45:30.531 [main] SessionFactoryRegistry - Registering SessionFactory: 5a9b8836-74a0-4bfd-85fe-52c575b42187 (<unnamed>)
[DEBUG] 2020-02-23 11:45:30.531 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-23 11:45:30.700 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-23 11:45:30.717 [main] SQL - select user0_.id as id1_1_0_, user0_.creation_datetime as creation2_1_0_, user0_.email as email3_1_0_, user0_.first_name as first_na4_1_0_, user0_.last_name as last_nam5_1_0_, user0_.password as password6_1_0_, user0_.update_datetime as update_d7_1_0_, user0_.user_name as user_nam8_1_0_, roles1_.user_name as user_nam4_0_1_, roles1_.id as id1_0_1_, roles1_.id as id1_0_2_, roles1_.creation_datetime as creation2_0_2_, roles1_.role_name as role_nam3_0_2_, roles1_.user_name as user_nam4_0_2_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.id=?
[DEBUG] 2020-02-23 11:45:30.752 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-23 11:45:30.756 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-23 11:45:30.857 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.mattanderson.carbConscious.entity.User.roles#User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}]
[DEBUG] 2020-02-23 11:45:30.871 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:30.872 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-23 11:45:30.873 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:30.873 [main] TwoPhaseLoad - Processing attribute `email` : value = matt@gmail.com
[DEBUG] 2020-02-23 11:45:30.873 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:30.873 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Matt
[DEBUG] 2020-02-23 11:45:30.873 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:30.873 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Anderson
[DEBUG] 2020-02-23 11:45:30.873 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:30.873 [main] TwoPhaseLoad - Processing attribute `password` : value = testing
[DEBUG] 2020-02-23 11:45:30.873 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:30.873 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-23 11:45:30.874 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:30.874 [main] TwoPhaseLoad - Processing attribute `updateDateTime` : value = 2020-01-02T00:00
[DEBUG] 2020-02-23 11:45:30.874 [main] TwoPhaseLoad - Attribute (`updateDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:30.874 [main] TwoPhaseLoad - Processing attribute `userName` : value = mattanderson
[DEBUG] 2020-02-23 11:45:30.874 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:30.874 [main] TwoPhaseLoad - Processing attribute `_com_mattanderson_carbConscious_entity_UserRole_user` : value = [Ljava.lang.Object;@35025a0a
[DEBUG] 2020-02-23 11:45:30.874 [main] TwoPhaseLoad - Attribute (`_com_mattanderson_carbConscious_entity_UserRole_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:30.876 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:30.876 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.UserRole#1]
[DEBUG] 2020-02-23 11:45:30.876 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-23 11:45:30.876 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:30.876 [main] TwoPhaseLoad - Processing attribute `name` : value = User
[DEBUG] 2020-02-23 11:45:30.877 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:30.877 [main] TwoPhaseLoad - Processing attribute `user` : value = User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}
[DEBUG] 2020-02-23 11:45:30.877 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:30.878 [main] Loader - Loading entity: [com.mattanderson.carbConscious.entity.User#component[userName]{userName=mattanderson}]
[DEBUG] 2020-02-23 11:45:30.878 [main] SQL - select user0_.id as id1_1_1_, user0_.creation_datetime as creation2_1_1_, user0_.email as email3_1_1_, user0_.first_name as first_na4_1_1_, user0_.last_name as last_nam5_1_1_, user0_.password as password6_1_1_, user0_.update_datetime as update_d7_1_1_, user0_.user_name as user_nam8_1_1_, roles1_.user_name as user_nam4_0_3_, roles1_.id as id1_0_3_, roles1_.id as id1_0_0_, roles1_.creation_datetime as creation2_0_0_, roles1_.role_name as role_nam3_0_0_, roles1_.user_name as user_nam4_0_0_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.user_name=?
[DEBUG] 2020-02-23 11:45:30.884 [main] Loader - Result set row: 0
[DEBUG] 2020-02-23 11:45:30.885 [main] Loader - Result row: EntityKey[com.mattanderson.carbConscious.entity.UserRole#1], EntityKey[com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:30.885 [main] Loader - Found row of collection: [com.mattanderson.carbConscious.entity.User.roles#User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}]
[DEBUG] 2020-02-23 11:45:30.886 [main] CollectionLoadContext - No collections were found in result set for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:30.887 [main] Loader - Done entity load
[DEBUG] 2020-02-23 11:45:30.887 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.UserRole#1]
[DEBUG] 2020-02-23 11:45:30.887 [main] CollectionLoadContext - 1 collections were found in result set for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:30.891 [main] CollectionLoadContext - Collection fully initialized: [com.mattanderson.carbConscious.entity.User.roles#1]
[DEBUG] 2020-02-23 11:45:30.891 [main] CollectionLoadContext - 1 collections initialized for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:30.892 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-23 11:45:30.892 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.mattanderson.carbConscious.entity.User#1
[DEBUG] 2020-02-23 11:45:30.893 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-23 11:45:30.902 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-23 11:45:30.902 [main] TransactionImpl - begin
[DEBUG] 2020-02-23 11:45:30.918 [main] TransactionImpl - committing
[DEBUG] 2020-02-23 11:45:30.919 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-23 11:45:30.919 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-23 11:45:30.932 [main] Collections - Collection dereferenced: [com.mattanderson.carbConscious.entity.User.roles#1]
[DEBUG] 2020-02-23 11:45:30.932 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 2 deletions to 2 objects
[DEBUG] 2020-02-23 11:45:30.932 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 2 removals to 1 collections
[DEBUG] 2020-02-23 11:45:30.934 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-02-23 11:45:30.935 [main] EntityPrinter - com.mattanderson.carbConscious.entity.User{firstName=Matt, lastName=Anderson, password=testing, roles=[com.mattanderson.carbConscious.entity.UserRole#1], id=1, updateDateTime=2020-01-02T00:00, userName=mattanderson, email=matt@gmail.com, creationDateTime=2020-01-01T00:00}
[DEBUG] 2020-02-23 11:45:30.935 [main] EntityPrinter - com.mattanderson.carbConscious.entity.UserRole{name=User, id=1, user=com.mattanderson.carbConscious.entity.User#1, creationDateTime=2020-01-01T00:00}
[DEBUG] 2020-02-23 11:45:30.942 [main] SQL - delete from USER_ROLES where id=?
[DEBUG] 2020-02-23 11:45:30.948 [main] SQL - delete from USERS where id=?
[DEBUG] 2020-02-23 11:45:30.957 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-23 11:45:30.959 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-23 11:45:30.959 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-02-23 11:45:30.960 [main] SQL - select user0_.id as id1_1_0_, user0_.creation_datetime as creation2_1_0_, user0_.email as email3_1_0_, user0_.first_name as first_na4_1_0_, user0_.last_name as last_nam5_1_0_, user0_.password as password6_1_0_, user0_.update_datetime as update_d7_1_0_, user0_.user_name as user_nam8_1_0_, roles1_.user_name as user_nam4_0_1_, roles1_.id as id1_0_1_, roles1_.id as id1_0_2_, roles1_.creation_datetime as creation2_0_2_, roles1_.role_name as role_nam3_0_2_, roles1_.user_name as user_nam4_0_2_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.id=?
[DEBUG] 2020-02-23 11:45:30.964 [main] CollectionLoadContext - No collections were found in result set for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:30.964 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-23 11:45:30.965 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.mattanderson.carbConscious.entity.User#1
[DEBUG] 2020-02-23 11:45:30.965 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-23 11:45:31.120 [main] SQL - select user0_.id as id1_1_0_, user0_.creation_datetime as creation2_1_0_, user0_.email as email3_1_0_, user0_.first_name as first_na4_1_0_, user0_.last_name as last_nam5_1_0_, user0_.password as password6_1_0_, user0_.update_datetime as update_d7_1_0_, user0_.user_name as user_nam8_1_0_, roles1_.user_name as user_nam4_0_1_, roles1_.id as id1_0_1_, roles1_.id as id1_0_2_, roles1_.creation_datetime as creation2_0_2_, roles1_.role_name as role_nam3_0_2_, roles1_.user_name as user_nam4_0_2_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.id=?
[DEBUG] 2020-02-23 11:45:31.125 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-23 11:45:31.125 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-23 11:45:31.126 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.mattanderson.carbConscious.entity.User.roles#User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}]
[DEBUG] 2020-02-23 11:45:31.127 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:31.127 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-23 11:45:31.127 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.127 [main] TwoPhaseLoad - Processing attribute `email` : value = matt@gmail.com
[DEBUG] 2020-02-23 11:45:31.127 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.127 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Matt
[DEBUG] 2020-02-23 11:45:31.127 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.127 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Anderson
[DEBUG] 2020-02-23 11:45:31.127 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.127 [main] TwoPhaseLoad - Processing attribute `password` : value = testing
[DEBUG] 2020-02-23 11:45:31.127 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.127 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Processing attribute `updateDateTime` : value = 2020-01-02T00:00
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Attribute (`updateDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Processing attribute `userName` : value = mattanderson
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Processing attribute `_com_mattanderson_carbConscious_entity_UserRole_user` : value = [Ljava.lang.Object;@4f235107
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Attribute (`_com_mattanderson_carbConscious_entity_UserRole_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.UserRole#1]
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Processing attribute `name` : value = User
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.128 [main] TwoPhaseLoad - Processing attribute `user` : value = User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}
[DEBUG] 2020-02-23 11:45:31.129 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.129 [main] Loader - Loading entity: [com.mattanderson.carbConscious.entity.User#component[userName]{userName=mattanderson}]
[DEBUG] 2020-02-23 11:45:31.129 [main] SQL - select user0_.id as id1_1_1_, user0_.creation_datetime as creation2_1_1_, user0_.email as email3_1_1_, user0_.first_name as first_na4_1_1_, user0_.last_name as last_nam5_1_1_, user0_.password as password6_1_1_, user0_.update_datetime as update_d7_1_1_, user0_.user_name as user_nam8_1_1_, roles1_.user_name as user_nam4_0_3_, roles1_.id as id1_0_3_, roles1_.id as id1_0_0_, roles1_.creation_datetime as creation2_0_0_, roles1_.role_name as role_nam3_0_0_, roles1_.user_name as user_nam4_0_0_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.user_name=?
[DEBUG] 2020-02-23 11:45:31.132 [main] Loader - Result set row: 0
[DEBUG] 2020-02-23 11:45:31.133 [main] Loader - Result row: EntityKey[com.mattanderson.carbConscious.entity.UserRole#1], EntityKey[com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:31.133 [main] Loader - Found row of collection: [com.mattanderson.carbConscious.entity.User.roles#User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}]
[DEBUG] 2020-02-23 11:45:31.133 [main] CollectionLoadContext - No collections were found in result set for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.134 [main] Loader - Done entity load
[DEBUG] 2020-02-23 11:45:31.134 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.UserRole#1]
[DEBUG] 2020-02-23 11:45:31.134 [main] CollectionLoadContext - 1 collections were found in result set for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.134 [main] CollectionLoadContext - Collection fully initialized: [com.mattanderson.carbConscious.entity.User.roles#1]
[DEBUG] 2020-02-23 11:45:31.134 [main] CollectionLoadContext - 1 collections initialized for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.134 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-23 11:45:31.135 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.mattanderson.carbConscious.entity.User#1
[DEBUG] 2020-02-23 11:45:31.135 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-23 11:45:31.137 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-23 11:45:31.137 [main] TransactionImpl - begin
[DEBUG] 2020-02-23 11:45:31.141 [main] TransactionImpl - committing
[DEBUG] 2020-02-23 11:45:31.141 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-23 11:45:31.141 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-23 11:45:31.143 [main] Collections - Collection found: [com.mattanderson.carbConscious.entity.User.roles#1], was: [com.mattanderson.carbConscious.entity.User.roles#1] (initialized)
[DEBUG] 2020-02-23 11:45:31.144 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 2 objects
[DEBUG] 2020-02-23 11:45:31.144 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2020-02-23 11:45:31.144 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-02-23 11:45:31.144 [main] EntityPrinter - com.mattanderson.carbConscious.entity.User{firstName=Matt, lastName=Peterson, password=testing, roles=[com.mattanderson.carbConscious.entity.UserRole#1], id=1, updateDateTime=2020-01-02T00:00, userName=mattanderson, email=matt@gmail.com, creationDateTime=2020-01-01T00:00}
[DEBUG] 2020-02-23 11:45:31.144 [main] EntityPrinter - com.mattanderson.carbConscious.entity.UserRole{name=User, id=1, user=com.mattanderson.carbConscious.entity.User#1, creationDateTime=2020-01-01T00:00}
[DEBUG] 2020-02-23 11:45:31.144 [main] SQL - update USERS set creation_datetime=?, email=?, first_name=?, last_name=?, password=?, update_datetime=?, user_name=? where id=?
[DEBUG] 2020-02-23 11:45:31.150 [main] SQL - update USER_ROLES set creation_datetime=?, role_name=?, user_name=? where id=?
[DEBUG] 2020-02-23 11:45:31.157 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-23 11:45:31.158 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-23 11:45:31.159 [main] SQL - select user0_.id as id1_1_0_, user0_.creation_datetime as creation2_1_0_, user0_.email as email3_1_0_, user0_.first_name as first_na4_1_0_, user0_.last_name as last_nam5_1_0_, user0_.password as password6_1_0_, user0_.update_datetime as update_d7_1_0_, user0_.user_name as user_nam8_1_0_, roles1_.user_name as user_nam4_0_1_, roles1_.id as id1_0_1_, roles1_.id as id1_0_2_, roles1_.creation_datetime as creation2_0_2_, roles1_.role_name as role_nam3_0_2_, roles1_.user_name as user_nam4_0_2_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.id=?
[DEBUG] 2020-02-23 11:45:31.162 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-23 11:45:31.163 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-23 11:45:31.164 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.mattanderson.carbConscious.entity.User.roles#User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}]
[DEBUG] 2020-02-23 11:45:31.164 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:31.164 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-23 11:45:31.164 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.164 [main] TwoPhaseLoad - Processing attribute `email` : value = matt@gmail.com
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Matt
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Peterson
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Processing attribute `password` : value = testing
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Processing attribute `updateDateTime` : value = 2020-01-02T00:00
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Attribute (`updateDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Processing attribute `userName` : value = mattanderson
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Processing attribute `_com_mattanderson_carbConscious_entity_UserRole_user` : value = [Ljava.lang.Object;@3a3f96ab
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Attribute (`_com_mattanderson_carbConscious_entity_UserRole_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:31.165 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.UserRole#1]
[DEBUG] 2020-02-23 11:45:31.166 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-23 11:45:31.166 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.166 [main] TwoPhaseLoad - Processing attribute `name` : value = User
[DEBUG] 2020-02-23 11:45:31.166 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.166 [main] TwoPhaseLoad - Processing attribute `user` : value = User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}
[DEBUG] 2020-02-23 11:45:31.166 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.166 [main] Loader - Loading entity: [com.mattanderson.carbConscious.entity.User#component[userName]{userName=mattanderson}]
[DEBUG] 2020-02-23 11:45:31.166 [main] SQL - select user0_.id as id1_1_1_, user0_.creation_datetime as creation2_1_1_, user0_.email as email3_1_1_, user0_.first_name as first_na4_1_1_, user0_.last_name as last_nam5_1_1_, user0_.password as password6_1_1_, user0_.update_datetime as update_d7_1_1_, user0_.user_name as user_nam8_1_1_, roles1_.user_name as user_nam4_0_3_, roles1_.id as id1_0_3_, roles1_.id as id1_0_0_, roles1_.creation_datetime as creation2_0_0_, roles1_.role_name as role_nam3_0_0_, roles1_.user_name as user_nam4_0_0_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.user_name=?
[DEBUG] 2020-02-23 11:45:31.168 [main] Loader - Result set row: 0
[DEBUG] 2020-02-23 11:45:31.169 [main] Loader - Result row: EntityKey[com.mattanderson.carbConscious.entity.UserRole#1], EntityKey[com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:31.169 [main] Loader - Found row of collection: [com.mattanderson.carbConscious.entity.User.roles#User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}]
[DEBUG] 2020-02-23 11:45:31.169 [main] CollectionLoadContext - No collections were found in result set for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.169 [main] Loader - Done entity load
[DEBUG] 2020-02-23 11:45:31.169 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.UserRole#1]
[DEBUG] 2020-02-23 11:45:31.169 [main] CollectionLoadContext - 1 collections were found in result set for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.169 [main] CollectionLoadContext - Collection fully initialized: [com.mattanderson.carbConscious.entity.User.roles#1]
[DEBUG] 2020-02-23 11:45:31.170 [main] CollectionLoadContext - 1 collections initialized for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.170 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-23 11:45:31.170 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.mattanderson.carbConscious.entity.User#1
[DEBUG] 2020-02-23 11:45:31.170 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-23 11:45:31.306 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2020-02-23 11:45:31.324 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2c8b8de0
[DEBUG] 2020-02-23 11:45:31.349 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.mattanderson.carbConscious.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2020-02-23 11:45:31.353 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-23 11:45:31.361 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'mattanderson'
    |  |     |  |  |  \-[IDENT] Node: 'carbConscious'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-02-23 11:45:31.385 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-23 11:45:31.400 [main] FromElement - FromClause{level=1} : com.mattanderson.carbConscious.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-23 11:45:31.402 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-02-23 11:45:31.406 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-02-23 11:45:31.407 [main] DotNode - getDataType() : userName -> org.hibernate.type.StringType@5ec77191
[DEBUG] 2020-02-23 11:45:31.408 [main] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.user_name
[DEBUG] 2020-02-23 11:45:31.411 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-23 11:45:31.411 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} USERS user0_ ) ( where ( = ( user0_.user_name user0_.id userName ) ? ) ) )
[DEBUG] 2020-02-23 11:45:31.420 [main] JoinProcessor - Using FROM fragment [USERS user0_]
[DEBUG] 2020-02-23 11:45:31.421 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-23 11:45:31.421 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (USERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=com.mattanderson.carbConscious.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.creation_datetime as creation2_1_, user0_.email as email3_1_, user0_.first_name as first_na4_1_, user0_.last_name as last_nam5_1_, user0_.password as password6_1_, user0_.update_datetime as update_d7_1_, user0_.user_name as user_nam8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'USERS user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=com.mattanderson.carbConscious.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=com.mattanderson.carbConscious.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=com.mattanderson.carbConscious.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5ec77191}

[DEBUG] 2020-02-23 11:45:31.422 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-23 11:45:31.434 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.mattanderson.carbConscious.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2020-02-23 11:45:31.434 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.creation_datetime as creation2_1_, user0_.email as email3_1_, user0_.first_name as first_na4_1_, user0_.last_name as last_nam5_1_, user0_.password as password6_1_, user0_.update_datetime as update_d7_1_, user0_.user_name as user_nam8_1_ from USERS user0_ where user0_.user_name=?
[DEBUG] 2020-02-23 11:45:31.434 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-23 11:45:31.455 [main] SQL - select user0_.id as id1_1_, user0_.creation_datetime as creation2_1_, user0_.email as email3_1_, user0_.first_name as first_na4_1_, user0_.last_name as last_nam5_1_, user0_.password as password6_1_, user0_.update_datetime as update_d7_1_, user0_.user_name as user_nam8_1_ from USERS user0_ where user0_.user_name=?
[DEBUG] 2020-02-23 11:45:31.459 [main] Loader - Result set row: 0
[DEBUG] 2020-02-23 11:45:31.459 [main] Loader - Result row: EntityKey[com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Processing attribute `email` : value = matt@gmail.com
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Matt
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Anderson
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Processing attribute `password` : value = testing
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Processing attribute `updateDateTime` : value = 2020-01-02T00:00
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Attribute (`updateDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Processing attribute `userName` : value = mattanderson
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Processing attribute `_com_mattanderson_carbConscious_entity_UserRole_user` : value = [Ljava.lang.Object;@6c8efde4
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Attribute (`_com_mattanderson_carbConscious_entity_UserRole_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.460 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:31.466 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.mattanderson.carbConscious.entity.User.roles#User{id=1, firstName='Matt', lastName='Anderson', userName='mattanderson', email='matt@gmail.com', password='testing', creationDateTime=2020-01-01T00:00, updateDateTime=2020-01-02T00:00}]
[DEBUG] 2020-02-23 11:45:31.467 [main] SQL - select roles0_.user_name as user_nam4_0_0_, roles0_.id as id1_0_0_, roles0_.id as id1_0_1_, roles0_.creation_datetime as creation2_0_1_, roles0_.role_name as role_nam3_0_1_, roles0_.user_name as user_nam4_0_1_ from USER_ROLES roles0_ where roles0_.user_name=?
[DEBUG] 2020-02-23 11:45:31.470 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.mattanderson.carbConscious.entity.User.roles#User{id=1, firstName='Matt', lastName='Anderson', userName='mattanderson', email='matt@gmail.com', password='testing', creationDateTime=2020-01-01T00:00, updateDateTime=2020-01-02T00:00}]
[DEBUG] 2020-02-23 11:45:31.470 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-23 11:45:31.471 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.mattanderson.carbConscious.entity.User.roles#User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}]
[DEBUG] 2020-02-23 11:45:31.472 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.UserRole#1]
[DEBUG] 2020-02-23 11:45:31.472 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-23 11:45:31.472 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.472 [main] TwoPhaseLoad - Processing attribute `name` : value = User
[DEBUG] 2020-02-23 11:45:31.472 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.472 [main] TwoPhaseLoad - Processing attribute `user` : value = User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}
[DEBUG] 2020-02-23 11:45:31.472 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.472 [main] Loader - Loading entity: [com.mattanderson.carbConscious.entity.User#component[userName]{userName=mattanderson}]
[DEBUG] 2020-02-23 11:45:31.472 [main] SQL - select user0_.id as id1_1_1_, user0_.creation_datetime as creation2_1_1_, user0_.email as email3_1_1_, user0_.first_name as first_na4_1_1_, user0_.last_name as last_nam5_1_1_, user0_.password as password6_1_1_, user0_.update_datetime as update_d7_1_1_, user0_.user_name as user_nam8_1_1_, roles1_.user_name as user_nam4_0_3_, roles1_.id as id1_0_3_, roles1_.id as id1_0_0_, roles1_.creation_datetime as creation2_0_0_, roles1_.role_name as role_nam3_0_0_, roles1_.user_name as user_nam4_0_0_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.user_name=?
[DEBUG] 2020-02-23 11:45:31.483 [main] Loader - Result set row: 0
[DEBUG] 2020-02-23 11:45:31.484 [main] Loader - Result row: EntityKey[com.mattanderson.carbConscious.entity.UserRole#1], EntityKey[com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:31.484 [main] Loader - Found row of collection: [com.mattanderson.carbConscious.entity.User.roles#User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}]
[DEBUG] 2020-02-23 11:45:31.485 [main] CollectionLoadContext - No collections were found in result set for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.485 [main] Loader - Done entity load
[DEBUG] 2020-02-23 11:45:31.485 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.UserRole#1]
[DEBUG] 2020-02-23 11:45:31.485 [main] CollectionLoadContext - 1 collections were found in result set for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.486 [main] CollectionLoadContext - Collection fully initialized: [com.mattanderson.carbConscious.entity.User.roles#1]
[DEBUG] 2020-02-23 11:45:31.486 [main] CollectionLoadContext - 1 collections initialized for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.486 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-23 11:45:31.486 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2020-02-23 11:45:31.488 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-23 11:45:31.627 [main] SQL - select user0_.id as id1_1_0_, user0_.creation_datetime as creation2_1_0_, user0_.email as email3_1_0_, user0_.first_name as first_na4_1_0_, user0_.last_name as last_nam5_1_0_, user0_.password as password6_1_0_, user0_.update_datetime as update_d7_1_0_, user0_.user_name as user_nam8_1_0_, roles1_.user_name as user_nam4_0_1_, roles1_.id as id1_0_1_, roles1_.id as id1_0_2_, roles1_.creation_datetime as creation2_0_2_, roles1_.role_name as role_nam3_0_2_, roles1_.user_name as user_nam4_0_2_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.id=?
[DEBUG] 2020-02-23 11:45:31.635 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-23 11:45:31.635 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-23 11:45:31.636 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.mattanderson.carbConscious.entity.User.roles#User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}]
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Processing attribute `email` : value = matt@gmail.com
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Matt
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Anderson
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Processing attribute `password` : value = testing
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.637 [main] TwoPhaseLoad - Processing attribute `updateDateTime` : value = 2020-01-02T00:00
[DEBUG] 2020-02-23 11:45:31.638 [main] TwoPhaseLoad - Attribute (`updateDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.638 [main] TwoPhaseLoad - Processing attribute `userName` : value = mattanderson
[DEBUG] 2020-02-23 11:45:31.638 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.638 [main] TwoPhaseLoad - Processing attribute `_com_mattanderson_carbConscious_entity_UserRole_user` : value = [Ljava.lang.Object;@1894fa9f
[DEBUG] 2020-02-23 11:45:31.638 [main] TwoPhaseLoad - Attribute (`_com_mattanderson_carbConscious_entity_UserRole_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.638 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:31.638 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.UserRole#1]
[DEBUG] 2020-02-23 11:45:31.638 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-23 11:45:31.638 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.638 [main] TwoPhaseLoad - Processing attribute `name` : value = User
[DEBUG] 2020-02-23 11:45:31.638 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.638 [main] TwoPhaseLoad - Processing attribute `user` : value = User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}
[DEBUG] 2020-02-23 11:45:31.638 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.638 [main] Loader - Loading entity: [com.mattanderson.carbConscious.entity.User#component[userName]{userName=mattanderson}]
[DEBUG] 2020-02-23 11:45:31.638 [main] SQL - select user0_.id as id1_1_1_, user0_.creation_datetime as creation2_1_1_, user0_.email as email3_1_1_, user0_.first_name as first_na4_1_1_, user0_.last_name as last_nam5_1_1_, user0_.password as password6_1_1_, user0_.update_datetime as update_d7_1_1_, user0_.user_name as user_nam8_1_1_, roles1_.user_name as user_nam4_0_3_, roles1_.id as id1_0_3_, roles1_.id as id1_0_0_, roles1_.creation_datetime as creation2_0_0_, roles1_.role_name as role_nam3_0_0_, roles1_.user_name as user_nam4_0_0_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.user_name=?
[DEBUG] 2020-02-23 11:45:31.641 [main] Loader - Result set row: 0
[DEBUG] 2020-02-23 11:45:31.641 [main] Loader - Result row: EntityKey[com.mattanderson.carbConscious.entity.UserRole#1], EntityKey[com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-23 11:45:31.641 [main] Loader - Found row of collection: [com.mattanderson.carbConscious.entity.User.roles#User{id=0, firstName='null', lastName='null', userName='mattanderson', email='null', password='null', creationDateTime=null, updateDateTime=null}]
[DEBUG] 2020-02-23 11:45:31.641 [main] CollectionLoadContext - No collections were found in result set for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.641 [main] Loader - Done entity load
[DEBUG] 2020-02-23 11:45:31.642 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.UserRole#1]
[DEBUG] 2020-02-23 11:45:31.642 [main] CollectionLoadContext - 1 collections were found in result set for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.642 [main] CollectionLoadContext - Collection fully initialized: [com.mattanderson.carbConscious.entity.User.roles#1]
[DEBUG] 2020-02-23 11:45:31.642 [main] CollectionLoadContext - 1 collections initialized for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.642 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-23 11:45:31.642 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.mattanderson.carbConscious.entity.User#1
[DEBUG] 2020-02-23 11:45:31.643 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-23 11:45:31.736 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-23 11:45:31.736 [main] TransactionImpl - begin
[DEBUG] 2020-02-23 11:45:31.742 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-02-23 11:45:31.744 [main] SQL - insert into USERS (creation_datetime, email, first_name, last_name, password, update_datetime, user_name) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-23 11:45:31.756 [main] IdentifierGeneratorHelper - Natively generated identity: 30
[DEBUG] 2020-02-23 11:45:31.756 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-23 11:45:31.757 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-02-23 11:45:31.757 [main] SQL - insert into USER_ROLES (creation_datetime, role_name, user_name) values (?, ?, ?)
[DEBUG] 2020-02-23 11:45:31.761 [main] IdentifierGeneratorHelper - Natively generated identity: 18
[DEBUG] 2020-02-23 11:45:31.761 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-23 11:45:31.763 [main] TransactionImpl - committing
[DEBUG] 2020-02-23 11:45:31.763 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-23 11:45:31.763 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-23 11:45:31.764 [main] Collections - Collection found: [com.mattanderson.carbConscious.entity.User.roles#30], was: [<unreferenced>] (initialized)
[DEBUG] 2020-02-23 11:45:31.764 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2020-02-23 11:45:31.764 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2020-02-23 11:45:31.764 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-02-23 11:45:31.764 [main] EntityPrinter - com.mattanderson.carbConscious.entity.User{firstName=Mike, lastName=Anderson, password=234(3L!, roles=[com.mattanderson.carbConscious.entity.UserRole#18], id=30, updateDateTime=2020-04-03T11:34, userName=mikeAnd23, email=mike@yahoo.com, creationDateTime=2020-03-23T10:53}
[DEBUG] 2020-02-23 11:45:31.764 [main] EntityPrinter - com.mattanderson.carbConscious.entity.UserRole{name=User, id=18, user=com.mattanderson.carbConscious.entity.User#30, creationDateTime=2020-01-01T00:00}
[DEBUG] 2020-02-23 11:45:31.767 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-23 11:45:31.768 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-23 11:45:31.769 [main] SQL - select user0_.id as id1_1_0_, user0_.creation_datetime as creation2_1_0_, user0_.email as email3_1_0_, user0_.first_name as first_na4_1_0_, user0_.last_name as last_nam5_1_0_, user0_.password as password6_1_0_, user0_.update_datetime as update_d7_1_0_, user0_.user_name as user_nam8_1_0_, roles1_.user_name as user_nam4_0_1_, roles1_.id as id1_0_1_, roles1_.id as id1_0_2_, roles1_.creation_datetime as creation2_0_2_, roles1_.role_name as role_nam3_0_2_, roles1_.user_name as user_nam4_0_2_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.id=?
[DEBUG] 2020-02-23 11:45:31.775 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-23 11:45:31.776 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-23 11:45:31.779 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.mattanderson.carbConscious.entity.User.roles#User{id=0, firstName='null', lastName='null', userName='mikeAnd23', email='null', password='null', creationDateTime=null, updateDateTime=null}]
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.User#30]
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-03-23T10:53
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Processing attribute `email` : value = mike@yahoo.com
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Mike
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Anderson
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Processing attribute `password` : value = 234(3L!
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Processing attribute `roles` : value = NOT NULL COLLECTION
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Attribute (`roles`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Processing attribute `updateDateTime` : value = 2020-04-03T11:34
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Attribute (`updateDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Processing attribute `userName` : value = mikeAnd23
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.780 [main] TwoPhaseLoad - Processing attribute `_com_mattanderson_carbConscious_entity_UserRole_user` : value = [Ljava.lang.Object;@12567179
[DEBUG] 2020-02-23 11:45:31.781 [main] TwoPhaseLoad - Attribute (`_com_mattanderson_carbConscious_entity_UserRole_user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.781 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.User#30]
[DEBUG] 2020-02-23 11:45:31.781 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.UserRole#18]
[DEBUG] 2020-02-23 11:45:31.781 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-23 11:45:31.781 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.781 [main] TwoPhaseLoad - Processing attribute `name` : value = User
[DEBUG] 2020-02-23 11:45:31.781 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.781 [main] TwoPhaseLoad - Processing attribute `user` : value = User{id=0, firstName='null', lastName='null', userName='mikeAnd23', email='null', password='null', creationDateTime=null, updateDateTime=null}
[DEBUG] 2020-02-23 11:45:31.781 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-23 11:45:31.781 [main] Loader - Loading entity: [com.mattanderson.carbConscious.entity.User#component[userName]{userName=mikeAnd23}]
[DEBUG] 2020-02-23 11:45:31.781 [main] SQL - select user0_.id as id1_1_1_, user0_.creation_datetime as creation2_1_1_, user0_.email as email3_1_1_, user0_.first_name as first_na4_1_1_, user0_.last_name as last_nam5_1_1_, user0_.password as password6_1_1_, user0_.update_datetime as update_d7_1_1_, user0_.user_name as user_nam8_1_1_, roles1_.user_name as user_nam4_0_3_, roles1_.id as id1_0_3_, roles1_.id as id1_0_0_, roles1_.creation_datetime as creation2_0_0_, roles1_.role_name as role_nam3_0_0_, roles1_.user_name as user_nam4_0_0_ from USERS user0_ left outer join USER_ROLES roles1_ on user0_.user_name=roles1_.user_name where user0_.user_name=?
[DEBUG] 2020-02-23 11:45:31.784 [main] Loader - Result set row: 0
[DEBUG] 2020-02-23 11:45:31.784 [main] Loader - Result row: EntityKey[com.mattanderson.carbConscious.entity.UserRole#18], EntityKey[com.mattanderson.carbConscious.entity.User#30]
[DEBUG] 2020-02-23 11:45:31.784 [main] Loader - Found row of collection: [com.mattanderson.carbConscious.entity.User.roles#User{id=0, firstName='null', lastName='null', userName='mikeAnd23', email='null', password='null', creationDateTime=null, updateDateTime=null}]
[DEBUG] 2020-02-23 11:45:31.784 [main] CollectionLoadContext - No collections were found in result set for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.785 [main] Loader - Done entity load
[DEBUG] 2020-02-23 11:45:31.785 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.UserRole#18]
[DEBUG] 2020-02-23 11:45:31.785 [main] CollectionLoadContext - 1 collections were found in result set for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.785 [main] CollectionLoadContext - Collection fully initialized: [com.mattanderson.carbConscious.entity.User.roles#30]
[DEBUG] 2020-02-23 11:45:31.785 [main] CollectionLoadContext - 1 collections initialized for role: com.mattanderson.carbConscious.entity.User.roles
[DEBUG] 2020-02-23 11:45:31.785 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-23 11:45:31.785 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.mattanderson.carbConscious.entity.User#30
[DEBUG] 2020-02-23 11:45:31.786 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
