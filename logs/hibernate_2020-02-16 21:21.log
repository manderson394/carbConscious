[DEBUG] 2020-02-16 21:21:55.098 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2020-02-16 21:21:55.101 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2020-02-16 21:21:55.106 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2020-02-16 21:21:55.232 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2020-02-16 21:21:55.238 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2020-02-16 21:21:55.490 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2020-02-16 21:21:55.491 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2020-02-16 21:21:55.512 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2020-02-16 21:21:55.882 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2020-02-16 21:21:55.909 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2020-02-16 21:21:55.911 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2020-02-16 21:21:55.933 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2020-02-16 21:21:55.968 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4cee7fa0
[DEBUG] 2020-02-16 21:21:55.968 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4cee7fa0
[DEBUG] 2020-02-16 21:21:55.968 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4cee7fa0
[DEBUG] 2020-02-16 21:21:55.969 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4e2c95ee
[DEBUG] 2020-02-16 21:21:55.969 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5942ee04
[DEBUG] 2020-02-16 21:21:55.970 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@14faa38c
[DEBUG] 2020-02-16 21:21:55.972 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5b6e8f77
[DEBUG] 2020-02-16 21:21:55.972 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5b6e8f77
[DEBUG] 2020-02-16 21:21:55.972 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b6e8f77
[DEBUG] 2020-02-16 21:21:55.975 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@27e32fe4
[DEBUG] 2020-02-16 21:21:55.975 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@27e32fe4
[DEBUG] 2020-02-16 21:21:55.975 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@27e32fe4
[DEBUG] 2020-02-16 21:21:55.977 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3044e9c7
[DEBUG] 2020-02-16 21:21:55.978 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3044e9c7
[DEBUG] 2020-02-16 21:21:55.978 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3044e9c7
[DEBUG] 2020-02-16 21:21:55.981 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@28952dea
[DEBUG] 2020-02-16 21:21:55.981 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@28952dea
[DEBUG] 2020-02-16 21:21:55.981 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28952dea
[DEBUG] 2020-02-16 21:21:55.983 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@70807224
[DEBUG] 2020-02-16 21:21:55.983 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@70807224
[DEBUG] 2020-02-16 21:21:55.983 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@70807224
[DEBUG] 2020-02-16 21:21:55.985 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2caf6912
[DEBUG] 2020-02-16 21:21:55.985 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2caf6912
[DEBUG] 2020-02-16 21:21:55.985 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2caf6912
[DEBUG] 2020-02-16 21:21:55.986 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@31ff1390
[DEBUG] 2020-02-16 21:21:55.986 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@31ff1390
[DEBUG] 2020-02-16 21:21:55.986 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31ff1390
[DEBUG] 2020-02-16 21:21:55.987 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f12e153
[DEBUG] 2020-02-16 21:21:55.988 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f12e153
[DEBUG] 2020-02-16 21:21:55.988 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@469d003c
[DEBUG] 2020-02-16 21:21:55.989 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@469d003c
[DEBUG] 2020-02-16 21:21:55.990 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1d3e6d34
[DEBUG] 2020-02-16 21:21:55.990 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d3e6d34
[DEBUG] 2020-02-16 21:21:55.991 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2873d672
[DEBUG] 2020-02-16 21:21:55.992 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@757529a4
[DEBUG] 2020-02-16 21:21:55.993 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@c68a5f8
[DEBUG] 2020-02-16 21:21:55.993 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@c68a5f8
[DEBUG] 2020-02-16 21:21:55.994 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6bff19ff
[DEBUG] 2020-02-16 21:21:55.995 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6bff19ff
[DEBUG] 2020-02-16 21:21:56.006 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@66908383
[DEBUG] 2020-02-16 21:21:56.007 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66908383
[DEBUG] 2020-02-16 21:21:56.009 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fe46b62
[DEBUG] 2020-02-16 21:21:56.009 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6fe46b62
[DEBUG] 2020-02-16 21:21:56.010 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@736ac09a
[DEBUG] 2020-02-16 21:21:56.011 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@736ac09a
[DEBUG] 2020-02-16 21:21:56.012 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@74fef3f7
[DEBUG] 2020-02-16 21:21:56.012 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@74fef3f7
[DEBUG] 2020-02-16 21:21:56.014 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@516ebdf8
[DEBUG] 2020-02-16 21:21:56.014 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@516ebdf8
[DEBUG] 2020-02-16 21:21:56.016 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7c2a69b4
[DEBUG] 2020-02-16 21:21:56.016 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7c2a69b4
[DEBUG] 2020-02-16 21:21:56.018 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56781d96
[DEBUG] 2020-02-16 21:21:56.018 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56781d96
[DEBUG] 2020-02-16 21:21:56.024 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7c2327fa
[DEBUG] 2020-02-16 21:21:56.024 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c2327fa
[DEBUG] 2020-02-16 21:21:56.026 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@726a6b94
[DEBUG] 2020-02-16 21:21:56.026 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@726a6b94
[DEBUG] 2020-02-16 21:21:56.028 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@69ce2f62
[DEBUG] 2020-02-16 21:21:56.028 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@69ce2f62
[DEBUG] 2020-02-16 21:21:56.028 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@69ce2f62
[DEBUG] 2020-02-16 21:21:56.030 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d02f8d
[DEBUG] 2020-02-16 21:21:56.032 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@43b0ade
[DEBUG] 2020-02-16 21:21:56.032 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@43b0ade
[DEBUG] 2020-02-16 21:21:56.032 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@43b0ade
[DEBUG] 2020-02-16 21:21:56.033 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f6962ba
[DEBUG] 2020-02-16 21:21:56.034 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3fbfa96
[DEBUG] 2020-02-16 21:21:56.034 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3fbfa96
[DEBUG] 2020-02-16 21:21:56.036 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@301d8120
[DEBUG] 2020-02-16 21:21:56.036 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@301d8120
[DEBUG] 2020-02-16 21:21:56.038 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3e134896
[DEBUG] 2020-02-16 21:21:56.039 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3e134896
[DEBUG] 2020-02-16 21:21:56.041 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2d0bfb24
[DEBUG] 2020-02-16 21:21:56.041 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2d0bfb24
[DEBUG] 2020-02-16 21:21:56.042 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1136b469
[DEBUG] 2020-02-16 21:21:56.043 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1136b469
[DEBUG] 2020-02-16 21:21:56.044 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@42f22995
[DEBUG] 2020-02-16 21:21:56.047 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@57bd802b
[DEBUG] 2020-02-16 21:21:56.048 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@57bd802b
[DEBUG] 2020-02-16 21:21:56.048 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@57bd802b
[DEBUG] 2020-02-16 21:21:56.049 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@27068a50
[DEBUG] 2020-02-16 21:21:56.050 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@27068a50
[DEBUG] 2020-02-16 21:21:56.050 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@27068a50
[DEBUG] 2020-02-16 21:21:56.051 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1b9c1b51
[DEBUG] 2020-02-16 21:21:56.052 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4525d1d3
[DEBUG] 2020-02-16 21:21:56.052 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@773bd77b
[DEBUG] 2020-02-16 21:21:56.053 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@773bd77b
[DEBUG] 2020-02-16 21:21:56.053 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@773bd77b
[DEBUG] 2020-02-16 21:21:56.053 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a5b8489
[DEBUG] 2020-02-16 21:21:56.054 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a5b8489
[DEBUG] 2020-02-16 21:21:56.054 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a5b8489
[DEBUG] 2020-02-16 21:21:56.054 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@34b9fc7d
[DEBUG] 2020-02-16 21:21:56.055 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7004e3d
[DEBUG] 2020-02-16 21:21:56.056 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@34cf5a97
[DEBUG] 2020-02-16 21:21:56.056 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@34cf5a97
[DEBUG] 2020-02-16 21:21:56.057 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@695a69a1
[DEBUG] 2020-02-16 21:21:56.064 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@61d01788
[DEBUG] 2020-02-16 21:21:56.065 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61d01788
[DEBUG] 2020-02-16 21:21:56.066 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@175acfb2
[DEBUG] 2020-02-16 21:21:56.067 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@175acfb2
[DEBUG] 2020-02-16 21:21:56.067 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@30af7377
[DEBUG] 2020-02-16 21:21:56.068 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f099cef
[DEBUG] 2020-02-16 21:21:56.070 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6bcbf05b
[DEBUG] 2020-02-16 21:21:56.076 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@201aa8c1
[DEBUG] 2020-02-16 21:21:56.076 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@201aa8c1
[DEBUG] 2020-02-16 21:21:56.077 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4f20a5e0
[DEBUG] 2020-02-16 21:21:56.077 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@54da32dc
[DEBUG] 2020-02-16 21:21:56.077 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d782abe
[DEBUG] 2020-02-16 21:21:56.077 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6df7988f
[DEBUG] 2020-02-16 21:21:56.077 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@27b22f74
[DEBUG] 2020-02-16 21:21:56.077 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@22fba58c
[DEBUG] 2020-02-16 21:21:56.077 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7e8a46b7
[DEBUG] 2020-02-16 21:21:56.078 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fe88a09
[DEBUG] 2020-02-16 21:21:56.120 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2020-02-16 21:21:56.121 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2020-02-16 21:21:56.121 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 21:21:56.122 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2020-02-16 21:21:56.122 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2020-02-16 21:21:56.123 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2020-02-16 21:21:56.124 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2020-02-16 21:21:56.130 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 21:21:56.131 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2020-02-16 21:21:56.132 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2020-02-16 21:21:56.133 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2020-02-16 21:21:56.134 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2020-02-16 21:21:56.134 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2020-02-16 21:21:56.135 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2020-02-16 21:21:56.141 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_carb_conscious
[INFO ] 2020-02-16 21:21:56.141 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2020-02-16 21:21:56.142 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2020-02-16 21:21:56.292 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2020-02-16 21:21:57.038 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.16
      major : 8
      minor : 0
[DEBUG] 2020-02-16 21:21:57.039 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2020-02-16 21:21:57.039 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2020-02-16 21:21:57.093 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2020-02-16 21:21:57.111 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2020-02-16 21:21:57.136 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2020-02-16 21:21:57.177 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2020-02-16 21:21:57.181 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@351f2244] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5496c165]
[DEBUG] 2020-02-16 21:21:57.262 [main] AnnotationBinder - Binding entity from annotated class: com.mattanderson.carbConscious.entity.User
[DEBUG] 2020-02-16 21:21:57.337 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2020-02-16 21:21:57.364 [main] EntityBinder - Import with entity name User
[DEBUG] 2020-02-16 21:21:57.373 [main] EntityBinder - Bind entity com.mattanderson.carbConscious.entity.User on table USERS
[DEBUG] 2020-02-16 21:21:57.421 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 21:21:57.425 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2020-02-16 21:21:57.428 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:id]
[DEBUG] 2020-02-16 21:21:57.432 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2020-02-16 21:21:57.435 [main] PropertyBinder - Building property id
[DEBUG] 2020-02-16 21:21:57.439 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2020-02-16 21:21:57.441 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=creation_datetime, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 21:21:57.442 [main] PropertyBinder - MetadataSourceProcessor property creationDateTime with lazy=false
[DEBUG] 2020-02-16 21:21:57.442 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:creationDateTime]
[DEBUG] 2020-02-16 21:21:57.442 [main] SimpleValueBinder - building SimpleValue for creationDateTime
[DEBUG] 2020-02-16 21:21:57.442 [main] PropertyBinder - Building property creationDateTime
[DEBUG] 2020-02-16 21:21:57.443 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 21:21:57.443 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2020-02-16 21:21:57.443 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:email]
[DEBUG] 2020-02-16 21:21:57.443 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2020-02-16 21:21:57.443 [main] PropertyBinder - Building property email
[DEBUG] 2020-02-16 21:21:57.444 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 21:21:57.444 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2020-02-16 21:21:57.444 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:firstName]
[DEBUG] 2020-02-16 21:21:57.444 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2020-02-16 21:21:57.444 [main] PropertyBinder - Building property firstName
[DEBUG] 2020-02-16 21:21:57.444 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 21:21:57.445 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2020-02-16 21:21:57.445 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:lastName]
[DEBUG] 2020-02-16 21:21:57.445 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2020-02-16 21:21:57.445 [main] PropertyBinder - Building property lastName
[DEBUG] 2020-02-16 21:21:57.445 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 21:21:57.445 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2020-02-16 21:21:57.445 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:password]
[DEBUG] 2020-02-16 21:21:57.446 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2020-02-16 21:21:57.446 [main] PropertyBinder - Building property password
[DEBUG] 2020-02-16 21:21:57.447 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=update_datetime, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 21:21:57.448 [main] PropertyBinder - MetadataSourceProcessor property updateDateTime with lazy=false
[DEBUG] 2020-02-16 21:21:57.448 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:updateDateTime]
[DEBUG] 2020-02-16 21:21:57.448 [main] SimpleValueBinder - building SimpleValue for updateDateTime
[DEBUG] 2020-02-16 21:21:57.448 [main] PropertyBinder - Building property updateDateTime
[DEBUG] 2020-02-16 21:21:57.448 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2020-02-16 21:21:57.449 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2020-02-16 21:21:57.449 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.mattanderson.carbConscious.entity.User:userName]
[DEBUG] 2020-02-16 21:21:57.449 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2020-02-16 21:21:57.449 [main] PropertyBinder - Building property userName
[DEBUG] 2020-02-16 21:21:57.452 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2020-02-16 21:21:57.453 [main] SimpleValueBinder - Starting fillSimpleValue for creationDateTime
[DEBUG] 2020-02-16 21:21:57.453 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2020-02-16 21:21:57.453 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2020-02-16 21:21:57.453 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2020-02-16 21:21:57.453 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2020-02-16 21:21:57.453 [main] SimpleValueBinder - Starting fillSimpleValue for updateDateTime
[DEBUG] 2020-02-16 21:21:57.453 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2020-02-16 21:21:57.455 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2020-02-16 21:21:57.495 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2020-02-16 21:21:57.497 [main] Settings - SessionFactory name : null
[DEBUG] 2020-02-16 21:21:57.497 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2020-02-16 21:21:57.497 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2020-02-16 21:21:57.497 [main] Settings - Statistics: disabled
[DEBUG] 2020-02-16 21:21:57.497 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2020-02-16 21:21:57.497 [main] Settings - Default entity-mode: pojo
[DEBUG] 2020-02-16 21:21:57.497 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2020-02-16 21:21:57.498 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2020-02-16 21:21:57.498 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2020-02-16 21:21:57.498 [main] Settings - Default batch fetch size: -1
[DEBUG] 2020-02-16 21:21:57.498 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2020-02-16 21:21:57.498 [main] Settings - Default null ordering: NONE
[DEBUG] 2020-02-16 21:21:57.498 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2020-02-16 21:21:57.498 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2020-02-16 21:21:57.498 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2020-02-16 21:21:57.498 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2020-02-16 21:21:57.498 [main] Settings - Query language substitutions: {}
[DEBUG] 2020-02-16 21:21:57.498 [main] Settings - Named query checking : enabled
[DEBUG] 2020-02-16 21:21:57.499 [main] Settings - Second-level cache: disabled
[DEBUG] 2020-02-16 21:21:57.499 [main] Settings - Second-level query cache: disabled
[DEBUG] 2020-02-16 21:21:57.499 [main] Settings - Second-level query cache factory: null
[DEBUG] 2020-02-16 21:21:57.499 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2020-02-16 21:21:57.499 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2020-02-16 21:21:57.499 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2020-02-16 21:21:57.499 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2020-02-16 21:21:57.499 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2020-02-16 21:21:57.499 [main] Settings - JDBC batch size: 15
[DEBUG] 2020-02-16 21:21:57.499 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2020-02-16 21:21:57.499 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2020-02-16 21:21:57.499 [main] Settings - Wrap result sets: disabled
[DEBUG] 2020-02-16 21:21:57.499 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2020-02-16 21:21:57.500 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2020-02-16 21:21:57.500 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2020-02-16 21:21:57.500 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2020-02-16 21:21:57.500 [main] Settings - JPA compliance - query : 
[DEBUG] 2020-02-16 21:21:57.500 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2020-02-16 21:21:57.500 [main] Settings - JPA compliance - lists : 
[DEBUG] 2020-02-16 21:21:57.500 [main] Settings - JPA compliance - transactions : 
[INFO ] 2020-02-16 21:21:57.560 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2020-02-16 21:21:57.585 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2020-02-16 21:21:57.585 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/carbConscious/target/test-classes:/home/student/IdeaProjects/carbConscious/target/classes:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.mattanderson.carbConscious.persistence.UserDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-28-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_carb_conscious, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.6, user.dir=/home/student/IdeaProjects/carbConscious, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@33063f5b, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.6+10-post-Ubuntu-1ubuntu118.04.1, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_carb_conscious, java.class.version=55.0}
[DEBUG] 2020-02-16 21:21:57.605 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2020-02-16 21:21:57.606 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2020-02-16 21:21:57.607 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2020-02-16 21:21:57.607 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@351f2244] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@30f74e79]
[DEBUG] 2020-02-16 21:21:57.653 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.mattanderson.carbConscious.entity.User] is safe
[DEBUG] 2020-02-16 21:21:57.653 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.mattanderson.carbConscious.entity.User
[DEBUG] 2020-02-16 21:21:57.668 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.mattanderson.carbConscious.entity.User] is safe
[DEBUG] 2020-02-16 21:21:57.668 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.mattanderson.carbConscious.entity.User
[DEBUG] 2020-02-16 21:21:57.952 [main] AbstractEntityPersister - Static SQL for entity: com.mattanderson.carbConscious.entity.User
[DEBUG] 2020-02-16 21:21:57.953 [main] AbstractEntityPersister -  Version select: select id from USERS where id =?
[DEBUG] 2020-02-16 21:21:57.953 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.creation_datetime as creation2_0_, user_.email as email3_0_, user_.first_name as first_na4_0_, user_.last_name as last_nam5_0_, user_.password as password6_0_, user_.update_datetime as update_d7_0_, user_.user_name as user_nam8_0_ from USERS user_ where user_.id=?
[DEBUG] 2020-02-16 21:21:57.953 [main] AbstractEntityPersister -  Insert 0: insert into USERS (creation_datetime, email, first_name, last_name, password, update_datetime, user_name, id) values (?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 21:21:57.953 [main] AbstractEntityPersister -  Update 0: update USERS set creation_datetime=?, email=?, first_name=?, last_name=?, password=?, update_datetime=?, user_name=? where id=?
[DEBUG] 2020-02-16 21:21:57.953 [main] AbstractEntityPersister -  Delete 0: delete from USERS where id=?
[DEBUG] 2020-02-16 21:21:57.953 [main] AbstractEntityPersister -  Identity insert: insert into USERS (creation_datetime, email, first_name, last_name, password, update_datetime, user_name) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 21:21:57.975 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f323b3a]
[DEBUG] 2020-02-16 21:21:57.976 [main] MetamodelGraphWalker - Visiting attribute path : creationDateTime
[DEBUG] 2020-02-16 21:21:57.976 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 21:21:57.977 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 21:21:57.977 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 21:21:57.977 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 21:21:57.977 [main] MetamodelGraphWalker - Visiting attribute path : updateDateTime
[DEBUG] 2020-02-16 21:21:57.977 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-02-16 21:21:57.977 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 21:21:57.991 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 21:21:57.995 [main] LoadPlanTreePrinter - LoadPlan(entity=com.mattanderson.carbConscious.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.mattanderson.carbConscious.entity.User, querySpaceUid=<gen:0>, path=com.mattanderson.carbConscious.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.mattanderson.carbConscious.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-02-16 21:21:57.998 [main] EntityLoader - Static select for entity com.mattanderson.carbConscious.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.creation_datetime as creation2_0_0_, user0_.email as email3_0_0_, user0_.first_name as first_na4_0_0_, user0_.last_name as last_nam5_0_0_, user0_.password as password6_0_0_, user0_.update_datetime as update_d7_0_0_, user0_.user_name as user_nam8_0_0_ from USERS user0_ where user0_.id=?
[DEBUG] 2020-02-16 21:21:57.999 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc6935c]
[DEBUG] 2020-02-16 21:21:58.000 [main] MetamodelGraphWalker - Visiting attribute path : creationDateTime
[DEBUG] 2020-02-16 21:21:58.000 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2020-02-16 21:21:58.000 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2020-02-16 21:21:58.000 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2020-02-16 21:21:58.000 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2020-02-16 21:21:58.000 [main] MetamodelGraphWalker - Visiting attribute path : updateDateTime
[DEBUG] 2020-02-16 21:21:58.000 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2020-02-16 21:21:58.000 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2020-02-16 21:21:58.001 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2020-02-16 21:21:58.001 [main] LoadPlanTreePrinter - LoadPlan(entity=com.mattanderson.carbConscious.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.mattanderson.carbConscious.entity.User, querySpaceUid=<gen:0>, path=com.mattanderson.carbConscious.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.mattanderson.carbConscious.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] 2020-02-16 21:21:58.001 [main] EntityLoader - Static select for entity com.mattanderson.carbConscious.entity.User [READ]: select user0_.id as id1_0_0_, user0_.creation_datetime as creation2_0_0_, user0_.email as email3_0_0_, user0_.first_name as first_na4_0_0_, user0_.last_name as last_nam5_0_0_, user0_.password as password6_0_0_, user0_.update_datetime as update_d7_0_0_, user0_.user_name as user_nam8_0_0_ from USERS user0_ where user0_.id=?
[DEBUG] 2020-02-16 21:21:58.019 [main] Loader - Static select for action ACTION_MERGE on entity com.mattanderson.carbConscious.entity.User: select user0_.id as id1_0_0_, user0_.creation_datetime as creation2_0_0_, user0_.email as email3_0_0_, user0_.first_name as first_na4_0_0_, user0_.last_name as last_nam5_0_0_, user0_.password as password6_0_0_, user0_.update_datetime as update_d7_0_0_, user0_.user_name as user_nam8_0_0_ from USERS user0_ where user0_.id=?
[DEBUG] 2020-02-16 21:21:58.019 [main] Loader - Static select for action ACTION_REFRESH on entity com.mattanderson.carbConscious.entity.User: select user0_.id as id1_0_0_, user0_.creation_datetime as creation2_0_0_, user0_.email as email3_0_0_, user0_.first_name as first_na4_0_0_, user0_.last_name as last_nam5_0_0_, user0_.password as password6_0_0_, user0_.update_datetime as update_d7_0_0_, user0_.user_name as user_nam8_0_0_ from USERS user0_ where user0_.id=?
[DEBUG] 2020-02-16 21:21:58.057 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2020-02-16 21:21:58.057 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2020-02-16 21:21:58.058 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2020-02-16 21:21:58.068 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2020-02-16 21:21:58.069 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2020-02-16 21:21:58.069 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2020-02-16 21:21:58.069 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2020-02-16 21:21:58.071 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4dfe8b37
[DEBUG] 2020-02-16 21:21:58.073 [main] SessionFactoryRegistry - Registering SessionFactory: 161b0fc2-2005-4d93-802d-5c94b8dc46f9 (<unnamed>)
[DEBUG] 2020-02-16 21:21:58.074 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2020-02-16 21:21:58.352 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2020-02-16 21:21:58.380 [main] SQL - select user0_.id as id1_0_0_, user0_.creation_datetime as creation2_0_0_, user0_.email as email3_0_0_, user0_.first_name as first_na4_0_0_, user0_.last_name as last_nam5_0_0_, user0_.password as password6_0_0_, user0_.update_datetime as update_d7_0_0_, user0_.user_name as user_nam8_0_0_ from USERS user0_ where user0_.id=?
[DEBUG] 2020-02-16 21:21:58.407 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 21:21:58.408 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-16 21:21:58.419 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-16 21:21:58.420 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-16 21:21:58.420 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.420 [main] TwoPhaseLoad - Processing attribute `email` : value = matt@gmail.com
[DEBUG] 2020-02-16 21:21:58.420 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.420 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Matt
[DEBUG] 2020-02-16 21:21:58.420 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.420 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Anderson
[DEBUG] 2020-02-16 21:21:58.420 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.420 [main] TwoPhaseLoad - Processing attribute `password` : value = testing
[DEBUG] 2020-02-16 21:21:58.420 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.421 [main] TwoPhaseLoad - Processing attribute `updateDateTime` : value = 2020-01-02T00:00
[DEBUG] 2020-02-16 21:21:58.421 [main] TwoPhaseLoad - Attribute (`updateDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.421 [main] TwoPhaseLoad - Processing attribute `userName` : value = mattanderson
[DEBUG] 2020-02-16 21:21:58.421 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.422 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-16 21:21:58.423 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 21:21:58.423 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.mattanderson.carbConscious.entity.User#1
[DEBUG] 2020-02-16 21:21:58.423 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 21:21:58.434 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-16 21:21:58.434 [main] TransactionImpl - begin
[DEBUG] 2020-02-16 21:21:58.445 [main] TransactionImpl - committing
[DEBUG] 2020-02-16 21:21:58.446 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-16 21:21:58.446 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-16 21:21:58.447 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2020-02-16 21:21:58.448 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-16 21:21:58.449 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-02-16 21:21:58.449 [main] EntityPrinter - com.mattanderson.carbConscious.entity.User{firstName=Matt, lastName=Anderson, password=testing, id=1, updateDateTime=2020-01-02T00:00, userName=mattanderson, email=matt@gmail.com, creationDateTime=2020-01-01T00:00}
[DEBUG] 2020-02-16 21:21:58.456 [main] SQL - delete from USERS where id=?
[DEBUG] 2020-02-16 21:21:58.467 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 21:21:58.468 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 21:21:58.469 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2020-02-16 21:21:58.469 [main] SQL - select user0_.id as id1_0_0_, user0_.creation_datetime as creation2_0_0_, user0_.email as email3_0_0_, user0_.first_name as first_na4_0_0_, user0_.last_name as last_nam5_0_0_, user0_.password as password6_0_0_, user0_.update_datetime as update_d7_0_0_, user0_.user_name as user_nam8_0_0_ from USERS user0_ where user0_.id=?
[DEBUG] 2020-02-16 21:21:58.473 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 21:21:58.473 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.mattanderson.carbConscious.entity.User#1
[DEBUG] 2020-02-16 21:21:58.473 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 21:21:58.615 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-16 21:21:58.616 [main] TransactionImpl - begin
[DEBUG] 2020-02-16 21:21:58.621 [main] TransactionImpl - committing
[DEBUG] 2020-02-16 21:21:58.622 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-16 21:21:58.622 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-16 21:21:58.625 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2020-02-16 21:21:58.625 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-16 21:21:58.625 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-02-16 21:21:58.625 [main] EntityPrinter - com.mattanderson.carbConscious.entity.User{firstName=Matt, lastName=Peterson, password=testing, id=1, updateDateTime=2020-01-02T00:00, userName=mattanderson, email=matt@gmail.com, creationDateTime=2020-01-01T00:00}
[DEBUG] 2020-02-16 21:21:58.625 [main] SQL - update USERS set creation_datetime=?, email=?, first_name=?, last_name=?, password=?, update_datetime=?, user_name=? where id=?
[DEBUG] 2020-02-16 21:21:58.635 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 21:21:58.637 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 21:21:58.637 [main] SQL - select user0_.id as id1_0_0_, user0_.creation_datetime as creation2_0_0_, user0_.email as email3_0_0_, user0_.first_name as first_na4_0_0_, user0_.last_name as last_nam5_0_0_, user0_.password as password6_0_0_, user0_.update_datetime as update_d7_0_0_, user0_.user_name as user_nam8_0_0_ from USERS user0_ where user0_.id=?
[DEBUG] 2020-02-16 21:21:58.641 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 21:21:58.641 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-16 21:21:58.642 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-16 21:21:58.642 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-16 21:21:58.642 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.642 [main] TwoPhaseLoad - Processing attribute `email` : value = matt@gmail.com
[DEBUG] 2020-02-16 21:21:58.642 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.642 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Matt
[DEBUG] 2020-02-16 21:21:58.642 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.642 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Peterson
[DEBUG] 2020-02-16 21:21:58.643 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.643 [main] TwoPhaseLoad - Processing attribute `password` : value = testing
[DEBUG] 2020-02-16 21:21:58.643 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.643 [main] TwoPhaseLoad - Processing attribute `updateDateTime` : value = 2020-01-02T00:00
[DEBUG] 2020-02-16 21:21:58.643 [main] TwoPhaseLoad - Attribute (`updateDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.643 [main] TwoPhaseLoad - Processing attribute `userName` : value = mattanderson
[DEBUG] 2020-02-16 21:21:58.643 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.643 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-16 21:21:58.644 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 21:21:58.644 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.mattanderson.carbConscious.entity.User#1
[DEBUG] 2020-02-16 21:21:58.644 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 21:21:58.788 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2020-02-16 21:21:58.805 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5a090f62
[DEBUG] 2020-02-16 21:21:58.827 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.mattanderson.carbConscious.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2020-02-16 21:21:58.832 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 21:21:58.840 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'mattanderson'
    |  |     |  |  |  \-[IDENT] Node: 'carbConscious'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2020-02-16 21:21:58.864 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2020-02-16 21:21:58.879 [main] FromElement - FromClause{level=1} : com.mattanderson.carbConscious.entity.User (generatedAlias0) -> user0_
[DEBUG] 2020-02-16 21:21:58.880 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-02-16 21:21:58.883 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2020-02-16 21:21:58.884 [main] DotNode - getDataType() : userName -> org.hibernate.type.StringType@1d3e6d34
[DEBUG] 2020-02-16 21:21:58.885 [main] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.user_name
[DEBUG] 2020-02-16 21:21:58.886 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2020-02-16 21:21:58.886 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} USERS user0_ ) ( where ( = ( user0_.user_name user0_.id userName ) ? ) ) )
[DEBUG] 2020-02-16 21:21:58.893 [main] JoinProcessor - Using FROM fragment [USERS user0_]
[DEBUG] 2020-02-16 21:21:58.894 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2020-02-16 21:21:58.894 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (USERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=com.mattanderson.carbConscious.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.creation_datetime as creation2_0_, user0_.email as email3_0_, user0_.first_name as first_na4_0_, user0_.last_name as last_nam5_0_, user0_.password as password6_0_, user0_.update_datetime as update_d7_0_, user0_.user_name as user_nam8_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'USERS user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=com.mattanderson.carbConscious.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=com.mattanderson.carbConscious.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=com.mattanderson.carbConscious.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@1d3e6d34}

[DEBUG] 2020-02-16 21:21:58.894 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 21:21:58.899 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.mattanderson.carbConscious.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2020-02-16 21:21:58.899 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.creation_datetime as creation2_0_, user0_.email as email3_0_, user0_.first_name as first_na4_0_, user0_.last_name as last_nam5_0_, user0_.password as password6_0_, user0_.update_datetime as update_d7_0_, user0_.user_name as user_nam8_0_ from USERS user0_ where user0_.user_name=?
[DEBUG] 2020-02-16 21:21:58.900 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2020-02-16 21:21:58.912 [main] SQL - select user0_.id as id1_0_, user0_.creation_datetime as creation2_0_, user0_.email as email3_0_, user0_.first_name as first_na4_0_, user0_.last_name as last_nam5_0_, user0_.password as password6_0_, user0_.update_datetime as update_d7_0_, user0_.user_name as user_nam8_0_ from USERS user0_ where user0_.user_name=?
[DEBUG] 2020-02-16 21:21:58.915 [main] Loader - Result set row: 0
[DEBUG] 2020-02-16 21:21:58.916 [main] Loader - Result row: EntityKey[com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-16 21:21:58.917 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-16 21:21:58.917 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-16 21:21:58.917 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.918 [main] TwoPhaseLoad - Processing attribute `email` : value = matt@gmail.com
[DEBUG] 2020-02-16 21:21:58.918 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.918 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Matt
[DEBUG] 2020-02-16 21:21:58.918 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.918 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Anderson
[DEBUG] 2020-02-16 21:21:58.918 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.918 [main] TwoPhaseLoad - Processing attribute `password` : value = testing
[DEBUG] 2020-02-16 21:21:58.918 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.918 [main] TwoPhaseLoad - Processing attribute `updateDateTime` : value = 2020-01-02T00:00
[DEBUG] 2020-02-16 21:21:58.918 [main] TwoPhaseLoad - Attribute (`updateDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.918 [main] TwoPhaseLoad - Processing attribute `userName` : value = mattanderson
[DEBUG] 2020-02-16 21:21:58.918 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:58.918 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-16 21:21:58.920 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 21:21:59.065 [main] SQL - select user0_.id as id1_0_0_, user0_.creation_datetime as creation2_0_0_, user0_.email as email3_0_0_, user0_.first_name as first_na4_0_0_, user0_.last_name as last_nam5_0_0_, user0_.password as password6_0_0_, user0_.update_datetime as update_d7_0_0_, user0_.user_name as user_nam8_0_0_ from USERS user0_ where user0_.id=?
[DEBUG] 2020-02-16 21:21:59.068 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 21:21:59.069 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-16 21:21:59.071 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-16 21:21:59.072 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-01-01T00:00
[DEBUG] 2020-02-16 21:21:59.072 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.073 [main] TwoPhaseLoad - Processing attribute `email` : value = matt@gmail.com
[DEBUG] 2020-02-16 21:21:59.073 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.073 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Matt
[DEBUG] 2020-02-16 21:21:59.073 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.073 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Anderson
[DEBUG] 2020-02-16 21:21:59.073 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.074 [main] TwoPhaseLoad - Processing attribute `password` : value = testing
[DEBUG] 2020-02-16 21:21:59.074 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.074 [main] TwoPhaseLoad - Processing attribute `updateDateTime` : value = 2020-01-02T00:00
[DEBUG] 2020-02-16 21:21:59.074 [main] TwoPhaseLoad - Attribute (`updateDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.074 [main] TwoPhaseLoad - Processing attribute `userName` : value = mattanderson
[DEBUG] 2020-02-16 21:21:59.074 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.074 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.User#1]
[DEBUG] 2020-02-16 21:21:59.074 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 21:21:59.074 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.mattanderson.carbConscious.entity.User#1
[DEBUG] 2020-02-16 21:21:59.074 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 21:21:59.165 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2020-02-16 21:21:59.165 [main] TransactionImpl - begin
[DEBUG] 2020-02-16 21:21:59.174 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2020-02-16 21:21:59.175 [main] SQL - insert into USERS (creation_datetime, email, first_name, last_name, password, update_datetime, user_name) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2020-02-16 21:21:59.182 [main] IdentifierGeneratorHelper - Natively generated identity: 9
[DEBUG] 2020-02-16 21:21:59.183 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 21:21:59.184 [main] TransactionImpl - committing
[DEBUG] 2020-02-16 21:21:59.184 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2020-02-16 21:21:59.184 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2020-02-16 21:21:59.184 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2020-02-16 21:21:59.185 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2020-02-16 21:21:59.185 [main] EntityPrinter - Listing entities:
[DEBUG] 2020-02-16 21:21:59.185 [main] EntityPrinter - com.mattanderson.carbConscious.entity.User{firstName=Mike, lastName=Anderson, password=234(3L!, id=9, updateDateTime=2020-04-03T11:34, userName=mikeAnd23, email=mike@yahoo.com, creationDateTime=2020-03-23T10:53}
[DEBUG] 2020-02-16 21:21:59.188 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 21:21:59.190 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2020-02-16 21:21:59.190 [main] SQL - select user0_.id as id1_0_0_, user0_.creation_datetime as creation2_0_0_, user0_.email as email3_0_0_, user0_.first_name as first_na4_0_0_, user0_.last_name as last_nam5_0_0_, user0_.password as password6_0_0_, user0_.update_datetime as update_d7_0_0_, user0_.user_name as user_nam8_0_0_ from USERS user0_ where user0_.id=?
[DEBUG] 2020-02-16 21:21:59.193 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2020-02-16 21:21:59.193 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2020-02-16 21:21:59.194 [main] TwoPhaseLoad - Resolving attributes for [com.mattanderson.carbConscious.entity.User#9]
[DEBUG] 2020-02-16 21:21:59.194 [main] TwoPhaseLoad - Processing attribute `creationDateTime` : value = 2020-03-23T10:53
[DEBUG] 2020-02-16 21:21:59.194 [main] TwoPhaseLoad - Attribute (`creationDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.194 [main] TwoPhaseLoad - Processing attribute `email` : value = mike@yahoo.com
[DEBUG] 2020-02-16 21:21:59.195 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.195 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Mike
[DEBUG] 2020-02-16 21:21:59.195 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.195 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Anderson
[DEBUG] 2020-02-16 21:21:59.195 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.195 [main] TwoPhaseLoad - Processing attribute `password` : value = 234(3L!
[DEBUG] 2020-02-16 21:21:59.195 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.195 [main] TwoPhaseLoad - Processing attribute `updateDateTime` : value = 2020-04-03T11:34
[DEBUG] 2020-02-16 21:21:59.195 [main] TwoPhaseLoad - Attribute (`updateDateTime`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.195 [main] TwoPhaseLoad - Processing attribute `userName` : value = mikeAnd23
[DEBUG] 2020-02-16 21:21:59.195 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2020-02-16 21:21:59.195 [main] TwoPhaseLoad - Done materializing entity [com.mattanderson.carbConscious.entity.User#9]
[DEBUG] 2020-02-16 21:21:59.195 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2020-02-16 21:21:59.196 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.mattanderson.carbConscious.entity.User#9
[DEBUG] 2020-02-16 21:21:59.196 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
